// <auto-generated />
using System;
using Astrana.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Astrana.Core.Data.Migrations.PostgreSQL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Astrana.Core.Data.Entities.AccessManagement.ApiAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("ApiAccessTokens", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<short?>("MaximumAge")
                        .HasColumnType("smallint")
                        .HasColumnOrder(6);

                    b.Property<short?>("MinimumAge")
                        .HasColumnType("smallint")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("UserProfileDetailId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserProfileDetailId");

                    b.ToTable("Audiences", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnOrder(4);

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.HasIndex("ThreeLetterCode")
                        .IsUnique();

                    b.HasIndex("TwoLetterCode")
                        .IsUnique();

                    b.ToTable("Countries", "config");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Australia",
                            NameTrxCode = "country_name_au",
                            ThreeLetterCode = "AUS",
                            TwoLetterCode = "AU"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Brazil",
                            NameTrxCode = "country_name_br",
                            ThreeLetterCode = "BRA",
                            TwoLetterCode = "BR"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "China",
                            NameTrxCode = "country_name_cn",
                            ThreeLetterCode = "CHN",
                            TwoLetterCode = "CN"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "France",
                            NameTrxCode = "country_name_fr",
                            ThreeLetterCode = "FRA",
                            TwoLetterCode = "FR"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "India",
                            NameTrxCode = "country_name_in",
                            ThreeLetterCode = "IND",
                            TwoLetterCode = "IN"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Israel",
                            NameTrxCode = "country_name_il",
                            ThreeLetterCode = "ILR",
                            TwoLetterCode = "IL"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Russia",
                            NameTrxCode = "country_name_ru",
                            ThreeLetterCode = "RUS",
                            TwoLetterCode = "RU"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "South Africa",
                            NameTrxCode = "country_name_za",
                            ThreeLetterCode = "ZAF",
                            TwoLetterCode = "ZA"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Spain",
                            NameTrxCode = "country_name_es",
                            ThreeLetterCode = "ESP",
                            TwoLetterCode = "ES"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "United Kingdom",
                            NameTrxCode = "country_name_gb",
                            ThreeLetterCode = "GBR",
                            TwoLetterCode = "GB"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2189), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "United States",
                            NameTrxCode = "country_name_us",
                            ThreeLetterCode = "USA",
                            TwoLetterCode = "US"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.FeatureToggle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<string>("FeatureDescription")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsFeatureDisabled")
                        .HasColumnType("boolean")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.HasIndex("FeatureName")
                        .IsUnique();

                    b.ToTable("FeatureToggles", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Feeling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnOrder(5);

                    b.Property<string>("UnicodeIcon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.ToTable("Feelings", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0931962-be57-4bf8-a16d-b1c8afadc73c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "happy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Happy",
                            NameTrxCode = "feeling_name_happy",
                            ShortCode = "",
                            UnicodeIcon = "😀"
                        },
                        new
                        {
                            Id = new Guid("b146aa9e-853b-4534-bfd5-45b90c36ae06"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blessed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blessed",
                            NameTrxCode = "feeling_name_blessed",
                            ShortCode = "",
                            UnicodeIcon = "😇"
                        },
                        new
                        {
                            Id = new Guid("37e9710b-bf18-4909-8d0c-4afb81d634ff"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "loved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Loved",
                            NameTrxCode = "feeling_name_loved",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            Id = new Guid("793d4aea-d070-4af8-8e8e-a8a3e242a610"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sad",
                            NameTrxCode = "feeling_name_sad",
                            ShortCode = "",
                            UnicodeIcon = "🙁"
                        },
                        new
                        {
                            Id = new Guid("abefcf02-075a-4e90-91c7-3b35ffec87c4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lovely",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lovely",
                            NameTrxCode = "feeling_name_lovely",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            Id = new Guid("bdae3279-8e9e-471b-adeb-a0f2d4600d7f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thankful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thankful",
                            NameTrxCode = "feeling_name_thankful",
                            ShortCode = "",
                            UnicodeIcon = "😄"
                        },
                        new
                        {
                            Id = new Guid("f689207e-31ca-4738-8155-a752443ec687"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "excited",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Excited",
                            NameTrxCode = "feeling_name_excited",
                            ShortCode = "",
                            UnicodeIcon = "🤩"
                        },
                        new
                        {
                            Id = new Guid("b1568ee9-afc7-4184-b285-605b3a6d6f15"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "in love",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "In Love",
                            NameTrxCode = "feeling_name_in_love",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            Id = new Guid("4baa1e0f-b50f-4472-bbac-e1061d844f78"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "crazy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Crazy",
                            NameTrxCode = "feeling_name_crazy",
                            ShortCode = "",
                            UnicodeIcon = "🤪"
                        },
                        new
                        {
                            Id = new Guid("631e1d7a-d927-4fd4-8dcc-a15de92d541f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "grateful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Grateful",
                            NameTrxCode = "feeling_name_grateful",
                            ShortCode = "",
                            UnicodeIcon = "😄"
                        },
                        new
                        {
                            Id = new Guid("5c4ae83e-e08b-46c5-8ccb-54472cbc23f8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blissful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blissful",
                            NameTrxCode = "feeling_name_blissful",
                            ShortCode = "",
                            UnicodeIcon = "😊"
                        },
                        new
                        {
                            Id = new Guid("95af4096-a28d-4cbd-89d2-48eea179ea9c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fantastic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fantastic",
                            NameTrxCode = "feeling_name_fantastic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("4d3e2d30-0c30-4e0a-a5ce-d39f4787f48e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "silly",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Silly",
                            NameTrxCode = "feeling_name_silly",
                            ShortCode = "",
                            UnicodeIcon = "😜"
                        },
                        new
                        {
                            Id = new Guid("e4bf7119-60b4-4b6c-ad04-dea1a30f4eec"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "festive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Festive",
                            NameTrxCode = "feeling_name_festive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("1a6daf1b-f80e-4cea-85ff-f781e0e92268"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wonderful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wonderful",
                            NameTrxCode = "feeling_name_wonderful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("b2d39460-360d-4087-a62f-a96779c62b14"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cool",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cool",
                            NameTrxCode = "feeling_name_cool",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("42d8061e-272b-46c0-b4ac-a75c31b9fdcd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amused",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amused",
                            NameTrxCode = "feeling_name_amused",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("44e8054a-d3c3-4d48-987d-bb23ed3f0956"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "relaxed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Relaxed",
                            NameTrxCode = "feeling_name_relaxed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("a64875db-26b0-4751-92d0-69033476bd76"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "positive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Positive",
                            NameTrxCode = "feeling_name_positive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("9569de03-58b9-4606-88ad-5be5fed507c6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "chill",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Chill",
                            NameTrxCode = "feeling_name_chill",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("ce50bcc6-71e5-4c8e-89f0-0014a1ed3f9b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hopeful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hopeful",
                            NameTrxCode = "feeling_name_hopeful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("9ab06a13-34df-4147-a134-be699d8f8c0e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "joyful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Joyful",
                            NameTrxCode = "feeling_name_joyful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("9328ac5e-8b06-4eec-bfd5-c6a5b07a19e0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "tired",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Tired",
                            NameTrxCode = "feeling_name_tired",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("a7ed6e07-d301-4c04-812e-64ca92eb6ae3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "motivated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Motivated",
                            NameTrxCode = "feeling_name_motivated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("a125ebf5-7825-4d2d-b2f8-2cc7401c9c10"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "proud",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Proud",
                            NameTrxCode = "feeling_name_proud",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("8a5b3fc1-924f-4c1b-9516-274fe5771ccf"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "alone",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Alone",
                            NameTrxCode = "feeling_name_alone",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("107075f2-55d1-4681-9345-6daf86653906"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thoughtful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thoughtful",
                            NameTrxCode = "feeling_name_thoughtful",
                            ShortCode = "",
                            UnicodeIcon = "🤔"
                        },
                        new
                        {
                            Id = new Guid("0ed88db2-d546-4a09-9e42-6081fdf615fd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "OK",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ok",
                            NameTrxCode = "feeling_name_OK",
                            ShortCode = "",
                            UnicodeIcon = "👌"
                        },
                        new
                        {
                            Id = new Guid("4e1e3f2f-abd6-4588-a585-2098caa5a8e7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nostalgic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nostalgic",
                            NameTrxCode = "feeling_name_nostalgic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("0a2557d1-41fe-427f-b921-8f468ffc1bb0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "angry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Angry",
                            NameTrxCode = "feeling_name_angry",
                            ShortCode = "",
                            UnicodeIcon = "😠"
                        },
                        new
                        {
                            Id = new Guid("b61b494a-9048-46d4-9600-ff0999731e4a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sick",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sick",
                            NameTrxCode = "feeling_name_sick",
                            ShortCode = "",
                            UnicodeIcon = "🤢"
                        },
                        new
                        {
                            Id = new Guid("d60407cc-eae6-4661-80ff-f1b758c763c6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "delighted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Delighted",
                            NameTrxCode = "feeling_name_delighted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("d251aa90-f44e-42f3-bace-5d3f66639614"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "drained",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Drained",
                            NameTrxCode = "feeling_name_drained",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("47671af8-0e68-4bae-b397-b05fae7e4f27"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "emotional",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Emotional",
                            NameTrxCode = "feeling_name_emotional",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("af911b5a-1ae4-4aff-8c38-6cda8e9cd0e9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "confident",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Confident",
                            NameTrxCode = "feeling_name_confident",
                            ShortCode = "",
                            UnicodeIcon = "😏"
                        },
                        new
                        {
                            Id = new Guid("3bebc039-6c0a-4bfc-b65a-48129fd00d67"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awesome",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awesome",
                            NameTrxCode = "feeling_name_awesome",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("3a1c43ff-2324-47c0-8ff4-8c9931b13326"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fresh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fresh",
                            NameTrxCode = "feeling_name_fresh",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("d4111bd4-83fb-4903-9d1b-26ce05cf0dd9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "determined",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Determined",
                            NameTrxCode = "feeling_name_determined",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("87155ab1-5050-4457-915e-1ac072253fad"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "exhausted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Exhausted",
                            NameTrxCode = "feeling_name_exhausted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("c27be5dc-51ec-4999-b9a2-2cea92c7205c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "glad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Glad",
                            NameTrxCode = "feeling_name_glad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("7e7ce6b4-a4f9-46e7-861e-566ae175852b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lucky",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lucky",
                            NameTrxCode = "feeling_name_lucky",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("29e04010-bfc4-4b30-9a72-2379395ed3ef"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "heartbroken",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Heartbroken",
                            NameTrxCode = "feeling_name_heartbroken",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("aa59d54c-e042-46bc-81e0-76e38c6362ce"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "bored",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Bored",
                            NameTrxCode = "feeling_name_bored",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("d47e7249-ea11-47ab-bdb1-b530882db058"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sleepy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sleepy",
                            NameTrxCode = "feeling_name_sleepy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("94a9178c-17ff-4918-bcc9-a2f66babb04b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "energised",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Energised",
                            NameTrxCode = "feeling_name_energised",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("f21ae468-2d4c-47a1-9fab-91bc092fd659"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hungry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hungry",
                            NameTrxCode = "feeling_name_hungry",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("a1d7fc82-d329-4490-9edd-8513ef5074a2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "professional",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Professional",
                            NameTrxCode = "feeling_name_professional",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("37e50492-b9c1-4e19-8e8d-ef211348b532"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pained",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pained",
                            NameTrxCode = "feeling_name_pained",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("7724e362-2c74-4f39-8cc1-8b64fe1a21af"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "peaceful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Peaceful",
                            NameTrxCode = "feeling_name_peaceful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("600f8b14-cadb-4d7c-b603-82706847fff4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "disappointed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Disappointed",
                            NameTrxCode = "feeling_name_disappointed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("783b4ec6-e2a9-4f85-b225-3e69a61e7eb9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "optimistic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Optimistic",
                            NameTrxCode = "feeling_name_optimistic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("ea2b6494-ab25-4b95-89cf-e4be975b8798"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cold",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cold",
                            NameTrxCode = "feeling_name_cold",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e3d9de4a-dea2-4be5-99c6-577c82b2ecb5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cute",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cute",
                            NameTrxCode = "feeling_name_cute",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("a11f9101-b393-431c-91f0-36ebbf694618"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fabulous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fabulous",
                            NameTrxCode = "feeling_name_fabulous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("d8c7d7cf-f6d7-4674-9be7-b767d43e89e2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "great",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Great",
                            NameTrxCode = "feeling_name_great",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("5da8d9ef-9727-4f35-a98f-ebcab9b3f73e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sorry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sorry",
                            NameTrxCode = "feeling_name_sorry",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e1d459dd-f299-429d-a749-816c1dc62ea4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "super",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Super",
                            NameTrxCode = "feeling_name_super",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("38bd1fd1-cd0d-4e8f-8e46-4fba7dc30194"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worried",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worried",
                            NameTrxCode = "feeling_name_worried",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("84ed4410-3c49-4c87-9478-b02d9711d6a0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "funny",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Funny",
                            NameTrxCode = "feeling_name_funny",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("f5e881e6-a785-456e-a5f3-62c64013e00f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "bad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Bad",
                            NameTrxCode = "feeling_name_bad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("2c95a7cc-937c-493b-954e-e8cd280407ec"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "down",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Down",
                            NameTrxCode = "feeling_name_down",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("779da9d7-ef22-41f8-a9c8-80b6fec2d1e1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "inspired",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Inspired",
                            NameTrxCode = "feeling_name_inspired",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("31a09f34-cdad-4b47-8b0c-81f1c0179142"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "satisfied",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Satisfied",
                            NameTrxCode = "feeling_name_satisfied",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("46205352-edba-464c-b742-3a0f67205c96"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pumped",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pumped",
                            NameTrxCode = "feeling_name_pumped",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("b033462c-f841-4c24-ba27-251d2d569937"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "calm",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Calm",
                            NameTrxCode = "feeling_name_calm",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("b602bc09-edbd-4aad-8ed4-633ecfb598b7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "confused",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Confused",
                            NameTrxCode = "feeling_name_confused",
                            ShortCode = "",
                            UnicodeIcon = "😕"
                        },
                        new
                        {
                            Id = new Guid("738c2a45-ef16-4374-9916-4b1395b4a71f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "goofy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Goofy",
                            NameTrxCode = "feeling_name_goofy",
                            ShortCode = "",
                            UnicodeIcon = "🤪"
                        },
                        new
                        {
                            Id = new Guid("1d576a43-8c06-42c0-8eb5-8194551e8aee"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "missing",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Missing",
                            NameTrxCode = "feeling_name_missing",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("f8f6c4a8-e3e1-4ba1-958e-f22d2195bfad"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "good",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Good",
                            NameTrxCode = "feeling_name_good",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("1d7916c1-88a2-481c-8919-b7560d6ca464"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sarcastic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sarcastic",
                            NameTrxCode = "feeling_name_sarcastic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("6d65ab00-b9b1-456d-973c-c536823ec585"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lonely",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lonely",
                            NameTrxCode = "feeling_name_lonely",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e1c3d88f-c836-434a-b71e-73a73a1cbb4c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "strong",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Strong",
                            NameTrxCode = "feeling_name_strong",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("ef9f2355-7218-4d5c-9fb8-207d21638286"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "concerned",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Concerned",
                            NameTrxCode = "feeling_name_concerned",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("a341b064-c688-43fd-9066-b644d0a97f33"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "special",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Special",
                            NameTrxCode = "feeling_name_special",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("4014d613-79c7-4f74-b19c-a4776784e35d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "depressed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Depressed",
                            NameTrxCode = "feeling_name_depressed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("3de69ccf-604b-47f9-b5be-7e15dbcc72e9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "jolly",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Jolly",
                            NameTrxCode = "feeling_name_jolly",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("9177c229-acda-4fbd-aae7-c183c75b2ae7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "curious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Curious",
                            NameTrxCode = "feeling_name_curious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("febf3b76-4147-4999-858d-8b97d994238b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "low",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Low",
                            NameTrxCode = "feeling_name_low",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("c4dca8f7-7be7-4714-b38b-828a3c229db1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "welcome",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Welcome",
                            NameTrxCode = "feeling_name_welcome",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("28c3d73b-ef2c-43d5-a83b-5e9e404d6cf8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "broken",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Broken",
                            NameTrxCode = "feeling_name_broken",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("d1676f6a-01c7-4b63-9b5b-a779ac43ea3a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "beautiful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Beautiful",
                            NameTrxCode = "feeling_name_beautiful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("bdbe8210-2d07-40ad-9d8b-8746b3d3db74"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amazing",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amazing",
                            NameTrxCode = "feeling_name_amazing",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("f24ac28d-47c7-4985-b7ff-d12c4d68ccca"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "irritated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Irritated",
                            NameTrxCode = "feeling_name_irritated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("6ebd362f-2360-4c06-b046-d40229fda222"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stressed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stressed",
                            NameTrxCode = "feeling_name_stressed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("ead77ffe-9249-432e-8594-ad6ef523b5a3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "incomplete",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Incomplete",
                            NameTrxCode = "feeling_name_incomplete",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("7f04334f-dd60-4543-acd0-cb333bfee15d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hyper",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hyper",
                            NameTrxCode = "feeling_name_hyper",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("ad2a84a3-b070-462e-b350-d0b63c0c62d7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mischievous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mischievous",
                            NameTrxCode = "feeling_name_mischievous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("49f30683-7989-457d-9380-8a0ad37d25a2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amazed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amazed",
                            NameTrxCode = "feeling_name_amazed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("15907f94-9524-41e3-b97f-ee38f8ab0faa"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "annoyed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Annoyed",
                            NameTrxCode = "feeling_name_annoyed",
                            ShortCode = "",
                            UnicodeIcon = "😒"
                        },
                        new
                        {
                            Id = new Guid("7d2696f6-0fb7-4ed2-ba54-ad624d34e94b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fed",
                            NameTrxCode = "feeling_name_fed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("4310e059-94fa-4cf8-abb9-9b5ab34a56d7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "puzzled",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Puzzled",
                            NameTrxCode = "feeling_name_puzzled",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("910de73d-c48c-41f7-b501-475bdd5200f4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "furious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Furious",
                            NameTrxCode = "feeling_name_furious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("3a1474e0-c73c-44ca-bf57-3fd67512524a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "refreshed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Refreshed",
                            NameTrxCode = "feeling_name_refreshed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("a272980b-18c7-4f49-8172-04110cc9c8a9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "accomplished",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Accomplished",
                            NameTrxCode = "feeling_name_accomplished",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("6e5f0a49-116a-4332-9e6d-3cc00423012c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "surprised",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Surprised",
                            NameTrxCode = "feeling_name_surprised",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("0201059f-0961-4994-817f-c8ca73383942"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "perplexed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Perplexed",
                            NameTrxCode = "feeling_name_perplexed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("75d364e8-a8e1-4e65-8bb8-12743c275e92"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "frustrated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Frustrated",
                            NameTrxCode = "feeling_name_frustrated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("b40e52d0-92f0-4f7c-b09d-a6c5dd3cc98a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "meh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Meh",
                            NameTrxCode = "feeling_name_meh",
                            ShortCode = "",
                            UnicodeIcon = "😐️"
                        },
                        new
                        {
                            Id = new Guid("67f4607d-b02a-493f-b84e-d48bc04e7258"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pretty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pretty",
                            NameTrxCode = "feeling_name_pretty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("2225616e-3914-480f-a7ec-7d45126e59a6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "better",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Better",
                            NameTrxCode = "feeling_name_better",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("42919eec-c00b-4138-8795-e49198ac0fca"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "guilty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Guilty",
                            NameTrxCode = "feeling_name_guilty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("29c85d2a-0b79-4b39-8fdb-c5fda8b5fb0b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "safe",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Safe",
                            NameTrxCode = "feeling_name_safe",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("78af9d62-f14a-4542-9bdc-0c92b633c17e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "free",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Free",
                            NameTrxCode = "feeling_name_free",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("d547bb8a-f918-4e09-8a9d-1160f980ae6a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lost",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lost",
                            NameTrxCode = "feeling_name_lost",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("9eb8b51e-9b7b-4644-a135-3198cc42a982"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "old",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Old",
                            NameTrxCode = "feeling_name_old",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("b43669c6-f0f0-44e1-87fe-b9899284b89c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lazy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lazy",
                            NameTrxCode = "feeling_name_lazy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("df322fce-0537-4936-a44c-82c3f5dcebdb"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worse",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worse",
                            NameTrxCode = "feeling_name_worse",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("5668a944-e868-48bd-b384-c1d8e27780d3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "horrible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Horrible",
                            NameTrxCode = "feeling_name_horrible",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("29ba9385-c058-4bf8-9d4f-8d7046c3dbea"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "comfortable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Comfortable",
                            NameTrxCode = "feeling_name_comfortable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("d1d4168e-067c-483d-8372-6e5cce795df1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stupid",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stupid",
                            NameTrxCode = "feeling_name_stupid",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e08c0de5-636a-4889-8dc4-a2face6e1767"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ashamed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ashamed",
                            NameTrxCode = "feeling_name_ashamed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("68006e61-f26f-4456-b6d9-97ca35735870"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "terrible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Terrible",
                            NameTrxCode = "feeling_name_terrible",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("0f407b75-2f6c-4ad3-ab38-7934af33d975"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "asleep",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Asleep",
                            NameTrxCode = "feeling_name_asleep",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("7a5f6698-f5dc-411f-ade2-752a2791049c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "well",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Well",
                            NameTrxCode = "feeling_name_well",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("bf7b9e3b-d2fb-41af-8a07-75044a5fe923"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "alive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Alive",
                            NameTrxCode = "feeling_name_alive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("03937452-d33d-4884-94a7-52451095bf28"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "shy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Shy",
                            NameTrxCode = "feeling_name_shy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("ee078fc6-c5c0-412d-86d6-743bfa3ab602"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rough",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rough",
                            NameTrxCode = "feeling_name_rough",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("226fcc6b-27f0-4e27-8737-3d6ef18ade92"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "weird",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Weird",
                            NameTrxCode = "feeling_name_weird",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("44227c07-9c95-49f6-86ee-87df3dc76e59"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "human",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Human",
                            NameTrxCode = "feeling_name_human",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("2eead6df-64dc-497a-8ab4-239a576beb5c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hurt",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hurt",
                            NameTrxCode = "feeling_name_hurt",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("3fa25184-9767-49d3-9f1e-b20502e36941"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awful",
                            NameTrxCode = "feeling_name_awful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("9b08d786-bb4b-42c0-8ea1-0b126fd380be"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "normal",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Normal",
                            NameTrxCode = "feeling_name_normal",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("68bb2f78-78a6-4a4f-9d86-cefe272eb643"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "warm",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Warm",
                            NameTrxCode = "feeling_name_warm",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("3a17f8e3-8bd8-4ead-8e80-c923e90186ef"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "insecure",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Insecure",
                            NameTrxCode = "feeling_name_insecure",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("2a6cae69-96d1-463e-90c0-f7780f4286bd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "weak",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Weak",
                            NameTrxCode = "feeling_name_weak",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("cad2a339-897e-4ccb-985c-101dae3cd945"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "kind",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Kind",
                            NameTrxCode = "feeling_name_kind",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("cbca7f9d-5539-48b3-9f31-22b1d0bac6df"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fine",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fine",
                            NameTrxCode = "feeling_name_fine",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("236edbd0-9058-4d45-9bab-b961f51d15ee"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dumb",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dumb",
                            NameTrxCode = "feeling_name_dumb",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("7f5e0a46-b949-420b-b293-7ad66a01f09d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nice",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nice",
                            NameTrxCode = "feeling_name_nice",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("c013de16-af35-4a83-8a9d-005411df1c5c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "important",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Important",
                            NameTrxCode = "feeling_name_important",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("fe31329d-b63c-4516-98f2-97fbff97a17f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "crappy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Crappy",
                            NameTrxCode = "feeling_name_crappy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("edebd05b-512a-4974-8dc5-e820fc8fe102"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "uncomfortable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Uncomfortable",
                            NameTrxCode = "feeling_name_uncomfortable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("263c86d0-5f82-4e2b-a5da-e7e613680ecd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worthless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worthless",
                            NameTrxCode = "feeling_name_worthless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("1ebc19ab-9b1f-4d3c-9442-8dec12eabb44"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ready",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ready",
                            NameTrxCode = "feeling_name_ready",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("904ce616-8257-4066-979b-601c00e5776c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "different",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Different",
                            NameTrxCode = "feeling_name_different",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("ce77d342-7e35-45d4-860e-74d7e41e1c0b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "helpless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Helpless",
                            NameTrxCode = "feeling_name_helpless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("24e9bc47-9854-4014-80ec-bc43427b2a61"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awkward",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awkward",
                            NameTrxCode = "feeling_name_awkward",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("661677df-f188-4819-8d48-0c1acdc4acd2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "drunk",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Drunk",
                            NameTrxCode = "feeling_name_drunk",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("300d7220-302d-487e-8ac8-2e451fbeb7ad"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "overwhelmed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Overwhelmed",
                            NameTrxCode = "feeling_name_overwhelmed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("7b343e11-b72b-467c-af79-07dd2c352d10"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hopeless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hopeless",
                            NameTrxCode = "feeling_name_hopeless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("957f8895-811c-4bf9-974f-48ca5099aea1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "whole",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Whole",
                            NameTrxCode = "feeling_name_whole",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("6bf5ef1d-f21a-4e59-ad91-23b4a6e04b79"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "miserable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Miserable",
                            NameTrxCode = "feeling_name_miserable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("0a982d06-c5b5-485b-8d0e-bf612faa85ee"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mad",
                            NameTrxCode = "feeling_name_mad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e6a5b487-ea31-4426-a24a-127743d6c13c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "deep",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Deep",
                            NameTrxCode = "feeling_name_deep",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("5876d9db-f769-4e47-9b4b-9979f7bb94b7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "yucky",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Yucky",
                            NameTrxCode = "feeling_name_yucky",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e3accb95-f0d7-4256-9d64-e8f26d1f67fa"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nervous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nervous",
                            NameTrxCode = "feeling_name_nervous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("537090b3-98da-4010-a943-8fd89c0a6042"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blue",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blue",
                            NameTrxCode = "feeling_name_blue",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("c526aa6c-3aa6-49ba-b81f-b2f0c157756e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wanted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wanted",
                            NameTrxCode = "feeling_name_wanted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("01b0463e-e484-4341-920d-6c8e59054082"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "honoured",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Honoured",
                            NameTrxCode = "feeling_name_honoured",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("09f6e48c-ef89-4e68-b4cf-880f9266bfde"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "light",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Light",
                            NameTrxCode = "feeling_name_light",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("dc9c7163-2c72-45dd-abeb-1b105c82ddb2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hung-over",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hung-Over",
                            NameTrxCode = "feeling_name_hung-over",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("5f39dbce-016c-467c-9e4d-3b4722918b0d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "secure",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Secure",
                            NameTrxCode = "feeling_name_secure",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("435516d8-f95a-41da-8f6a-7e7a885a71ef"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "naked",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Naked",
                            NameTrxCode = "feeling_name_naked",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("a8fb388b-9fe2-442d-a2e0-debbf273bbad"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dirty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dirty",
                            NameTrxCode = "feeling_name_dirty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("45f18f5c-6eb7-413a-9743-9ff15a844909"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unimportant",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unimportant",
                            NameTrxCode = "feeling_name_unimportant",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("c024dcf5-5930-44fd-bc32-bb8b6ee7ade9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mighty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mighty",
                            NameTrxCode = "feeling_name_mighty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("2518d02b-daa3-406f-af3a-521e4243f760"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "scared",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Scared",
                            NameTrxCode = "feeling_name_scared",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("b4280d5e-b8f6-49b8-bc42-bf1f5cf4e7fe"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "jealous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Jealous",
                            NameTrxCode = "feeling_name_jealous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e6e1dcda-a39e-4761-aafc-9a01f1c0381f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sore",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sore",
                            NameTrxCode = "feeling_name_sore",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("8f468680-46fd-4ab2-b327-37908cd9e1cc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unwanted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unwanted",
                            NameTrxCode = "feeling_name_unwanted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("4fbc1597-d125-4bec-8061-f4b858a52317"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "appreciated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Appreciated",
                            NameTrxCode = "feeling_name_appreciated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("aac49b66-1283-40cd-9639-cdefba10c80e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "full",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Full",
                            NameTrxCode = "feeling_name_full",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("5dd8e2ab-98b9-4a79-aa69-17a3d77f2f66"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "busy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Busy",
                            NameTrxCode = "feeling_name_busy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("acea64da-5603-4827-8e39-a5e5be564089"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "small",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Small",
                            NameTrxCode = "feeling_name_small",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("9443f8a7-8fc2-4c27-9450-465c0305cc5c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unloved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unloved",
                            NameTrxCode = "feeling_name_unloved",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e00c1cb9-2973-4f5b-9174-fa39c0c7457f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "useless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Useless",
                            NameTrxCode = "feeling_name_useless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("ebfb55ad-be5d-45dc-b787-513d596c3ff6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "qualified",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Qualified",
                            NameTrxCode = "feeling_name_qualified",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("958a80ee-dc1e-41cc-bbc0-4d2499208ff6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blah",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blah",
                            NameTrxCode = "feeling_name_blah",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("554344f1-0959-43f8-9b9a-6240459e50fa"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "impatient",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Impatient",
                            NameTrxCode = "feeling_name_impatient",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("574ca539-203d-4c23-b9fd-7ff3ba413c1d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "privileged",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Privileged",
                            NameTrxCode = "feeling_name_privileged",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("7d19f3f4-26ff-463c-86cf-6f4f858f9f1b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "trapped",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Trapped",
                            NameTrxCode = "feeling_name_trapped",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("d1772517-e204-435c-b4ce-83da146c64c5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thirsty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thirsty",
                            NameTrxCode = "feeling_name_thirsty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("3fcbd2aa-a8f3-4a9d-aa0c-8c9af2987fe4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nauseous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nauseous",
                            NameTrxCode = "feeling_name_nauseous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("337cbc92-bb1c-4896-aad0-6547c64c8363"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "upset",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Upset",
                            NameTrxCode = "feeling_name_upset",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("4364c2ca-6526-45fc-8f97-25b01c6c2c3a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "offended",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Offended",
                            NameTrxCode = "feeling_name_offended",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("7593cff3-6537-4129-99f7-376557aed4fb"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "numb",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Numb",
                            NameTrxCode = "feeling_name_numb",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("4177bbf5-2fda-446e-9b6f-2bb7a01c58c2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "perfect",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Perfect",
                            NameTrxCode = "feeling_name_perfect",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("ae387fde-acfe-4ead-9a20-c88fa8660a14"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "challenged",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Challenged",
                            NameTrxCode = "feeling_name_challenged",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("54cacb5e-c9f1-4064-8ac6-3709f5d554e3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "threatened",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Threatened",
                            NameTrxCode = "feeling_name_threatened",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("dab2eb48-1575-4668-b545-96eda677bebe"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "relieved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Relieved",
                            NameTrxCode = "feeling_name_relieved",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("4adf8413-b3d5-4d20-985c-2750b869a683"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stuck",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stuck",
                            NameTrxCode = "feeling_name_stuck",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("26c9e43f-3b06-4753-887a-225df2f5a677"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "strange",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Strange",
                            NameTrxCode = "feeling_name_strange",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("1685090a-fc14-44c0-80fd-f3a85e79032a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "embarrassed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Embarrassed",
                            NameTrxCode = "feeling_name_embarrassed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("a2d34d5e-ea92-425b-be9f-f199879dacd4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rested",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rested",
                            NameTrxCode = "feeling_name_rested",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e450eeed-6c6e-4159-b905-9a99ac0928dd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "smart",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Smart",
                            NameTrxCode = "feeling_name_smart",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("dab20c58-dab0-499e-b06e-77ef322338e6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cheated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cheated",
                            NameTrxCode = "feeling_name_cheated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("03c9eb70-88a5-42d0-9b14-535ac8877759"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "betrayed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Betrayed",
                            NameTrxCode = "feeling_name_betrayed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("4eb9c61e-f938-4359-a42d-19af03f362b0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "anxious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Anxious",
                            NameTrxCode = "feeling_name_anxious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("b6988350-0f3b-418d-a397-5250ba27e76c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "aggravated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Aggravated",
                            NameTrxCode = "feeling_name_aggravated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("8a52191e-1b15-4b27-8ee7-8bc85395696e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "evil",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Evil",
                            NameTrxCode = "feeling_name_evil",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("5eca8820-c00d-420c-9cec-ded630397cc4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ignored",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ignored",
                            NameTrxCode = "feeling_name_ignored",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("e932f05f-9913-49bb-b634-5c82d55ab7d3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "regret",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Regret",
                            NameTrxCode = "feeling_name_regret",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("dfc81755-f1d6-41ae-a8dd-2242afa76405"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "healthy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Healthy",
                            NameTrxCode = "feeling_name_healthy",
                            ShortCode = "",
                            UnicodeIcon = "😊"
                        },
                        new
                        {
                            Id = new Guid("8fc4739d-0a48-4c15-823c-6e6a3dce882a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "generous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Generous",
                            NameTrxCode = "feeling_name_generous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("8c3b8a50-c98b-40f2-a3b2-ea3c1586b643"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rich",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rich",
                            NameTrxCode = "feeling_name_rich",
                            ShortCode = "",
                            UnicodeIcon = "🤑"
                        },
                        new
                        {
                            Id = new Guid("6cfe6ce3-d14f-4aff-bea5-43ea30254368"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "afraid",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Afraid",
                            NameTrxCode = "feeling_name_afraid",
                            ShortCode = "",
                            UnicodeIcon = "😨"
                        },
                        new
                        {
                            Id = new Guid("32b12946-0d5a-42e4-bc17-deedab9da25f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "broke",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Broke",
                            NameTrxCode = "feeling_name_broke",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            Id = new Guid("7950d225-5009-458a-af3c-5ef18e3ecdd3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "invisible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(3691), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Invisible",
                            NameTrxCode = "feeling_name_invisible",
                            ShortCode = "",
                            UnicodeIcon = "🫥"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<int>("Direction")
                        .HasColumnType("integer")
                        .HasColumnOrder(6);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnOrder(5);

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.HasIndex("ThreeLetterCode")
                        .IsUnique();

                    b.HasIndex("TwoLetterCode")
                        .IsUnique();

                    b.ToTable("Languages", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a9934d7-b9e5-43bd-a41e-9a1babe1c8ad"),
                            Code = "EN",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "English",
                            NameTrxCode = "language_name_en",
                            ThreeLetterCode = "ENG",
                            TwoLetterCode = "EN"
                        },
                        new
                        {
                            Id = new Guid("dfe2c8d9-96d8-4d3f-badf-c9eca2933ddd"),
                            Code = "AF",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Afrikaans",
                            NameTrxCode = "language_name_af",
                            ThreeLetterCode = "AFR",
                            TwoLetterCode = "AF"
                        },
                        new
                        {
                            Id = new Guid("014f2c34-4184-44d6-981f-f949e717227b"),
                            Code = "FR",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "French",
                            NameTrxCode = "language_name_fr",
                            ThreeLetterCode = "FRA",
                            TwoLetterCode = "FR"
                        },
                        new
                        {
                            Id = new Guid("2613eb10-46ad-4bb4-a71c-99a0f22583ec"),
                            Code = "ZH",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Chinese",
                            NameTrxCode = "language_name_zh",
                            ThreeLetterCode = "ZHO",
                            TwoLetterCode = "ZH"
                        },
                        new
                        {
                            Id = new Guid("31b238d7-963b-4a6f-9ec3-cdfbce418c90"),
                            Code = "HE",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 1,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hebrew",
                            NameTrxCode = "language_name_he",
                            ThreeLetterCode = "HEB",
                            TwoLetterCode = "HE"
                        },
                        new
                        {
                            Id = new Guid("644426cf-be01-493d-9f9b-7039840bc0c5"),
                            Code = "HI",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hindi",
                            NameTrxCode = "language_name_hi",
                            ThreeLetterCode = "HIN",
                            TwoLetterCode = "HI"
                        },
                        new
                        {
                            Id = new Guid("f5240d6e-bbd2-4994-8554-6d17cd8de802"),
                            Code = "RU",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Russian",
                            NameTrxCode = "language_name_ru",
                            ThreeLetterCode = "RUS",
                            TwoLetterCode = "RU"
                        },
                        new
                        {
                            Id = new Guid("34ed5be6-b77a-4a51-bce4-ddc24f284a57"),
                            Code = "ES",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Spanish",
                            NameTrxCode = "language_name_es",
                            ThreeLetterCode = "ESP",
                            TwoLetterCode = "ES"
                        },
                        new
                        {
                            Id = new Guid("b226f065-258b-4551-a6e2-250193ae95bd"),
                            Code = "ZU",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(1027), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Zulu",
                            NameTrxCode = "language_name_zu",
                            ThreeLetterCode = "ZUL",
                            TwoLetterCode = "ZU"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.PhoneNumberType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("PhoneNumberTypes", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("UnicodeIcon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.ToTable("Reactions", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("35597910-17c7-4c5d-935f-98d383c50285"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "like",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Like",
                            NameTrxCode = "reaction_name_like",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("7ae3fc17-8276-41ad-a608-12ad48731a8e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dislike",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dislike",
                            NameTrxCode = "reaction_name_dislike",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("fb4f7987-f52e-4e35-99c6-7691052cf72e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "love",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Love",
                            NameTrxCode = "reaction_name_love",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("f5d82b4a-e069-470c-90f7-70ff6c5d3d14"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "care",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Care",
                            NameTrxCode = "reaction_name_care",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("d972b482-222d-43ca-8495-17c05da25c2c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wow",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wow",
                            NameTrxCode = "reaction_name_wow",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("551c4f1b-27a9-43ce-81b3-41c584277172"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "laugh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Haha",
                            NameTrxCode = "reaction_name_laugh",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("25b5f2df-4584-4186-8554-b7d4f4637b88"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "angry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Angry",
                            NameTrxCode = "reaction_name_angry",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("6786bc5b-c44e-403e-a14e-985d8324d258"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 745, DateTimeKind.Unspecified).AddTicks(2982), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sad",
                            NameTrxCode = "reaction_name_sad",
                            UnicodeIcon = "1"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<int>("DataType")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(5);

                    b.Property<string>("HelpText")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("SettingCategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(3);

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("SettingCategoryId");

                    b.ToTable("Settings", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("307c120b-cd96-44b5-b9b2-6900ea7cab0e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "AU",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Regional Format",
                            ShortDescription = "Formats for dates, times and numbers."
                        },
                        new
                        {
                            Id = new Guid("d3572331-21c9-41d9-8208-5648727c2065"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "EN",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Language Code",
                            ShortDescription = "The language code of the Astrana instance user."
                        },
                        new
                        {
                            Id = new Guid("683294db-187a-4492-838e-7ea7ab31356b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "AUS Eastern Standard Time",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Time Zone",
                            ShortDescription = "The time zone of the Astrana instance user."
                        },
                        new
                        {
                            Id = new Guid("71c8a537-3c5b-4c2a-9a87-5154aee58c2c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "localhost",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Host Name",
                            ShortDescription = "The address of the Astrana instance."
                        },
                        new
                        {
                            Id = new Guid("6d49af78-ec23-4d91-b0f5-04c002ef4fef"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Host Port Number",
                            ShortDescription = "The host port number of the Astrana instance."
                        },
                        new
                        {
                            Id = new Guid("2434721d-63f1-414a-96b8-5d305963a029"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Idp Issuer Signing Key Secret",
                            ShortDescription = "The secret used for generating the Idp Issuer Signing Key for the Astrana instance.",
                            Value = "69473DFCE4E2D15A343495F3612FBD2C69473DFCE4E2D15A343495F3612FBD2C"
                        },
                        new
                        {
                            Id = new Guid("e445c922-9e78-4d95-b8eb-46247a628714"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 21,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Default Skin Tone",
                            ShortDescription = "The secret used for generating the Idp Issuer Signing Key for the Astrana instance.",
                            Value = "69473DFCE4E2D15A343495F3612FBD2C69473DFCE4E2D15A343495F3612FBD2C"
                        },
                        new
                        {
                            Id = new Guid("22cd06b6-47f5-43c9-9542-65a475663572"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 1,
                            DefaultValue = "0",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 8, 15, 0, 44, 13, 744, DateTimeKind.Unspecified).AddTicks(8699), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Multi-factor Authentication",
                            ShortDescription = "Turn multi-factor authentication on/off."
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("SettingCategories", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.ToTable("EmailAddresses", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("InstantMessengerUsernames", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.ToTable("PhoneNumbers", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("ContentCollections", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentSafetyRating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("ContentSafetyRatings", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ExternalContentSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("CharSet")
                        .HasColumnType("text")
                        .HasColumnOrder(5);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Locale")
                        .HasColumnType("text")
                        .HasColumnOrder(4);

                    b.Property<Guid>("PreviewImageId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(9);

                    b.Property<string>("Robots")
                        .HasColumnType("text")
                        .HasColumnOrder(6);

                    b.Property<string>("SiteName")
                        .HasColumnType("text")
                        .HasColumnOrder(7);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("PreviewImageId");

                    b.ToTable("ExternalContentSubscriptions", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("ContentCollectionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Caption")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("character varying(2500)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("ContentCollectionId");

                    b.ToTable("Images", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("CharSet")
                        .HasColumnType("text")
                        .HasColumnOrder(5);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Locale")
                        .HasColumnType("text")
                        .HasColumnOrder(4);

                    b.Property<Guid>("PreviewImageId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(9);

                    b.Property<string>("Robots")
                        .HasColumnType("text")
                        .HasColumnOrder(6);

                    b.Property<string>("SiteName")
                        .HasColumnType("text")
                        .HasColumnOrder(7);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("PreviewImageId");

                    b.ToTable("Links", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Post", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Posts", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.PostAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("ContentCollectionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AudioId")
                        .HasColumnType("uuid");

                    b.Property<string>("Caption")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("FeelingId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("LinkId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<long?>("PostId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(1);

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ContentCollectionId");

                    b.HasIndex("AudioId");

                    b.HasIndex("FeelingId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LinkId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PostId");

                    b.HasIndex("VideoId");

                    b.ToTable("PostAttachments", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.ToTable("Tags", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Videos", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text")
                        .HasColumnOrder(10);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnOrder(20);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnOrder(4);

                    b.Property<short>("FailedAccessCount")
                        .HasColumnType("smallint")
                        .HasColumnOrder(17);

                    b.Property<bool>("IsEmailAddressConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsLockoutEnabled")
                        .HasColumnType("boolean")
                        .HasColumnOrder(16);

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnOrder(13);

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnOrder(14);

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnOrder(19);

                    b.Property<DateTimeOffset>("LastLoginTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(21);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(15);

                    b.Property<string>("NormalizedEmailAddress")
                        .HasColumnType("text")
                        .HasColumnOrder(5);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnOrder(7);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("text")
                        .HasColumnOrder(8);

                    b.Property<string>("PhoneCountryCodeISO")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnOrder(11);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnOrder(12);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text")
                        .HasColumnOrder(9);

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(18);

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("UserAccounts", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccountRoleRel", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "UserRoleId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserAccountRoleRel", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserRoles", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.Peer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AudienceId1")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsMuted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(6);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.HasIndex("AudienceId1");

                    b.ToTable("Peers", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.PeerConnectionRequestReceived", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerPreviewAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("PeerConnectionRequestsReceived", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.PeerConnectionRequestSubmitted", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("text")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerPreviewAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("PeerConnectionRequestsSubmitted", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserEmailAddressRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("EmailAddressId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "EmailAddressId");

                    b.HasIndex("EmailAddressId");

                    b.ToTable("UserEmailAddressRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserMessengerUsernameRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("MessengerUsernameId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "MessengerUsernameId");

                    b.HasIndex("MessengerUsernameId");

                    b.ToTable("MessengerUsernameRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserPhoneNumberRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PhoneNumberId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "PhoneNumberId");

                    b.HasIndex("PhoneNumberId");

                    b.ToTable("UserPhoneNumberRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("CoverPictureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(6);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(3);

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnOrder(7);

                    b.Property<string>("Introduction")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(8);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("MiddleNames")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("CoverPictureId");

                    b.HasIndex("ProfilePictureId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserProfiles", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99998);

                    b.Property<short?>("DisplayOrder")
                        .HasColumnType("smallint")
                        .HasColumnOrder(7);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(3);

                    b.Property<string>("Label")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(99999);

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileDetails", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.User.UserProfileDetail", null)
                        .WithMany("Audiences")
                        .HasForeignKey("UserProfileDetailId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Country", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("Countries")
                        .HasForeignKey("AudienceId");

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Language", null)
                        .WithMany("Countries")
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSetting", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", "SettingCategory")
                        .WithMany("Settings")
                        .HasForeignKey("SettingCategoryId");

                    b.Navigation("SettingCategory");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ExternalContentSubscription", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "PreviewImage")
                        .WithMany()
                        .HasForeignKey("PreviewImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviewImage");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Image", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", null)
                        .WithMany("Images")
                        .HasForeignKey("ContentCollectionId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Link", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "PreviewImage")
                        .WithMany()
                        .HasForeignKey("PreviewImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviewImage");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.PostAttachment", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "ContentCollection")
                        .WithMany()
                        .HasForeignKey("ContentCollectionId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId");

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Feeling", "Feeling")
                        .WithMany()
                        .HasForeignKey("FeelingId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Post", null)
                        .WithMany("Attachments")
                        .HasForeignKey("PostId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId");

                    b.Navigation("ContentCollection");

                    b.Navigation("Audio");

                    b.Navigation("Feeling");

                    b.Navigation("Image");

                    b.Navigation("Link");

                    b.Navigation("Location");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Tag", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("Tags")
                        .HasForeignKey("AudienceId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccountRoleRel", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserRole", "UserRole")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.Peer", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("PeersExcluded")
                        .HasForeignKey("AudienceId");

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("PeersIncluded")
                        .HasForeignKey("AudienceId1");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserEmailAddressRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", "EmailAddress")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("EmailAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailAddress");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserMessengerUsernameRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", "MessengerUsername")
                        .WithMany("MessengerUsernames")
                        .HasForeignKey("MessengerUsernameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("MessengerUsernames")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessengerUsername");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserPhoneNumberRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", "PhoneNumber")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneNumber");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfile", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "CoverPicture")
                        .WithMany()
                        .HasForeignKey("CoverPictureId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureId");

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoverPicture");

                    b.Navigation("ProfilePicture");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.User.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("PeersExcluded");

                    b.Navigation("PeersIncluded");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Language", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", b =>
                {
                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", b =>
                {
                    b.Navigation("EmailAddresses");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", b =>
                {
                    b.Navigation("MessengerUsernames");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", b =>
                {
                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollection", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Post", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccount", b =>
                {
                    b.Navigation("EmailAddresses");

                    b.Navigation("MessengerUsernames");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("UserAccountRoles");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserRole", b =>
                {
                    b.Navigation("UserAccountRoles");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.Navigation("Audiences");
                });
#pragma warning restore 612, 618
        }
    }
}
