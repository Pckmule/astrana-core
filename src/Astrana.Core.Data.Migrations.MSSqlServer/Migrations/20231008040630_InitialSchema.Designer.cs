// <auto-generated />
using System;
using Astrana.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Astrana.Core.Data.Migrations.MSSqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231008040630_InitialSchema")]
    partial class InitialSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Astrana.Core.Data.Entities.AccessManagement.ApiAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("ApiAccessTokens", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<short?>("MaximumAge")
                        .HasColumnType("smallint")
                        .HasColumnOrder(6);

                    b.Property<short?>("MinimumAge")
                        .HasColumnType("smallint")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("UserProfileDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserProfileDetailId");

                    b.ToTable("Audiences", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(4);

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.HasIndex("ThreeLetterCode")
                        .IsUnique();

                    b.HasIndex("TwoLetterCode")
                        .IsUnique();

                    b.ToTable("Countries", "config");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Australia",
                            NameTrxCode = "country_name_au",
                            ThreeLetterCode = "AUS",
                            TwoLetterCode = "AU"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Brazil",
                            NameTrxCode = "country_name_br",
                            ThreeLetterCode = "BRA",
                            TwoLetterCode = "BR"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "China",
                            NameTrxCode = "country_name_cn",
                            ThreeLetterCode = "CHN",
                            TwoLetterCode = "CN"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "France",
                            NameTrxCode = "country_name_fr",
                            ThreeLetterCode = "FRA",
                            TwoLetterCode = "FR"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "India",
                            NameTrxCode = "country_name_in",
                            ThreeLetterCode = "IND",
                            TwoLetterCode = "IN"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Israel",
                            NameTrxCode = "country_name_il",
                            ThreeLetterCode = "ILR",
                            TwoLetterCode = "IL"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Russia",
                            NameTrxCode = "country_name_ru",
                            ThreeLetterCode = "RUS",
                            TwoLetterCode = "RU"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "South Africa",
                            NameTrxCode = "country_name_za",
                            ThreeLetterCode = "ZAF",
                            TwoLetterCode = "ZA"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Spain",
                            NameTrxCode = "country_name_es",
                            ThreeLetterCode = "ESP",
                            TwoLetterCode = "ES"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "United Kingdom",
                            NameTrxCode = "country_name_gb",
                            ThreeLetterCode = "GBR",
                            TwoLetterCode = "GB"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(3836), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "United States",
                            NameTrxCode = "country_name_us",
                            ThreeLetterCode = "USA",
                            TwoLetterCode = "US"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.FeatureToggle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<string>("FeatureDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsFeatureDisabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.HasIndex("FeatureName")
                        .IsUnique();

                    b.ToTable("FeatureToggles", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Feeling", b =>
                {
                    b.Property<Guid>("FeelingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(5);

                    b.Property<string>("UnicodeIcon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(4);

                    b.HasKey("FeelingId");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.ToTable("Feelings", "config");

                    b.HasData(
                        new
                        {
                            FeelingId = new Guid("7bba8764-3dc3-4446-82a3-2318e5581922"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "happy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Happy",
                            NameTrxCode = "feeling_name_happy",
                            ShortCode = "",
                            UnicodeIcon = "😀"
                        },
                        new
                        {
                            FeelingId = new Guid("541d1785-9b99-47a1-9f34-3a0db1b07e04"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blessed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blessed",
                            NameTrxCode = "feeling_name_blessed",
                            ShortCode = "",
                            UnicodeIcon = "😇"
                        },
                        new
                        {
                            FeelingId = new Guid("a0935845-0481-4ca8-879b-3c903a59d4c8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "loved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Loved",
                            NameTrxCode = "feeling_name_loved",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            FeelingId = new Guid("7a189d3c-9b88-4c64-9145-7f38fba44e92"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sad",
                            NameTrxCode = "feeling_name_sad",
                            ShortCode = "",
                            UnicodeIcon = "🙁"
                        },
                        new
                        {
                            FeelingId = new Guid("6971aa0c-e2c3-4a93-ad3f-95cbc0c8ef50"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lovely",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lovely",
                            NameTrxCode = "feeling_name_lovely",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            FeelingId = new Guid("959d2b3f-26e8-49a5-bf1a-10bb0aae2083"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thankful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thankful",
                            NameTrxCode = "feeling_name_thankful",
                            ShortCode = "",
                            UnicodeIcon = "😄"
                        },
                        new
                        {
                            FeelingId = new Guid("48c63d39-dcc4-4dd4-b28d-1369035c47fd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "excited",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Excited",
                            NameTrxCode = "feeling_name_excited",
                            ShortCode = "",
                            UnicodeIcon = "🤩"
                        },
                        new
                        {
                            FeelingId = new Guid("92333245-f001-4c36-8546-8843c8c70135"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "in love",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "In Love",
                            NameTrxCode = "feeling_name_in_love",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            FeelingId = new Guid("35f22209-d6bc-4cd4-b7bc-0097a8f386b4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "crazy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Crazy",
                            NameTrxCode = "feeling_name_crazy",
                            ShortCode = "",
                            UnicodeIcon = "🤪"
                        },
                        new
                        {
                            FeelingId = new Guid("da707751-954b-4be2-93ea-a7410ed2caed"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "grateful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Grateful",
                            NameTrxCode = "feeling_name_grateful",
                            ShortCode = "",
                            UnicodeIcon = "😄"
                        },
                        new
                        {
                            FeelingId = new Guid("39938827-e9e7-42c8-a9e0-b1dadb3cefa9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blissful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blissful",
                            NameTrxCode = "feeling_name_blissful",
                            ShortCode = "",
                            UnicodeIcon = "😊"
                        },
                        new
                        {
                            FeelingId = new Guid("aa941b7d-43da-4f7b-8012-8049c9848aa0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fantastic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fantastic",
                            NameTrxCode = "feeling_name_fantastic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4db8d1b7-cd96-4815-9f65-cb8309ee2974"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "silly",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Silly",
                            NameTrxCode = "feeling_name_silly",
                            ShortCode = "",
                            UnicodeIcon = "😜"
                        },
                        new
                        {
                            FeelingId = new Guid("796fb2ec-94e5-4e45-bcdf-bed3e9ba4380"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "festive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Festive",
                            NameTrxCode = "feeling_name_festive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0ff05d76-9a54-4ec4-913a-803772be4c20"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wonderful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wonderful",
                            NameTrxCode = "feeling_name_wonderful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3e26f171-6b7e-4ed7-8ae0-59a3056bbed8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cool",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cool",
                            NameTrxCode = "feeling_name_cool",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0cf321dc-cf87-4f26-88f3-a9d26f08b45e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amused",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amused",
                            NameTrxCode = "feeling_name_amused",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7a090833-24b5-4302-80d5-8dc684846ebf"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "relaxed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Relaxed",
                            NameTrxCode = "feeling_name_relaxed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("578ab0fe-8935-4009-9052-adb886a741fd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "positive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Positive",
                            NameTrxCode = "feeling_name_positive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d4e45a5d-18be-4236-b517-61bbed738b3f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "chill",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Chill",
                            NameTrxCode = "feeling_name_chill",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("21410885-5c62-4971-86b4-a05a9a35baf1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hopeful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hopeful",
                            NameTrxCode = "feeling_name_hopeful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("68d397fa-f782-4f5f-b2ad-99ec48db63db"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "joyful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Joyful",
                            NameTrxCode = "feeling_name_joyful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1cf4c841-283f-4ea5-a3ce-5a0dbec8ad12"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "tired",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Tired",
                            NameTrxCode = "feeling_name_tired",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1db05553-82cd-4b16-9766-339c27187e01"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "motivated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Motivated",
                            NameTrxCode = "feeling_name_motivated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("90d1318b-c36c-44f3-aad1-a0a07811df7f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "proud",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Proud",
                            NameTrxCode = "feeling_name_proud",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e199c00c-83e3-4e37-a544-1ad5d1e90cb0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "alone",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Alone",
                            NameTrxCode = "feeling_name_alone",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b317cef0-7bce-48bb-ab33-adb789b259c0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thoughtful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thoughtful",
                            NameTrxCode = "feeling_name_thoughtful",
                            ShortCode = "",
                            UnicodeIcon = "🤔"
                        },
                        new
                        {
                            FeelingId = new Guid("7965db24-c370-42b3-91c4-bdfcdd56937b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "OK",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ok",
                            NameTrxCode = "feeling_name_OK",
                            ShortCode = "",
                            UnicodeIcon = "👌"
                        },
                        new
                        {
                            FeelingId = new Guid("3e9bfebf-9a1b-4e1c-a015-a9b7749bf55f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nostalgic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nostalgic",
                            NameTrxCode = "feeling_name_nostalgic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1e53b19e-622d-44b5-ba1b-be93951e3f70"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "angry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Angry",
                            NameTrxCode = "feeling_name_angry",
                            ShortCode = "",
                            UnicodeIcon = "😠"
                        },
                        new
                        {
                            FeelingId = new Guid("152f108d-cd37-4f9b-ac63-3a65d3cea016"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sick",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sick",
                            NameTrxCode = "feeling_name_sick",
                            ShortCode = "",
                            UnicodeIcon = "🤢"
                        },
                        new
                        {
                            FeelingId = new Guid("4607f160-3509-486a-8202-1cef9babc9c2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "delighted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Delighted",
                            NameTrxCode = "feeling_name_delighted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c8a63864-4fd3-4848-840c-b49f97ea3024"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "drained",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Drained",
                            NameTrxCode = "feeling_name_drained",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e44f69cc-80dc-4057-b60f-2d8597f33a75"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "emotional",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Emotional",
                            NameTrxCode = "feeling_name_emotional",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("06ac71e0-5da4-4cfc-9700-f6f548d6e4e7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "confident",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Confident",
                            NameTrxCode = "feeling_name_confident",
                            ShortCode = "",
                            UnicodeIcon = "😏"
                        },
                        new
                        {
                            FeelingId = new Guid("a8e03b38-4113-438a-a5e1-237587f761c4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awesome",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awesome",
                            NameTrxCode = "feeling_name_awesome",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2bad282f-1466-4111-919a-ac7dfb8d337f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fresh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fresh",
                            NameTrxCode = "feeling_name_fresh",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1cd61fa5-d54c-456c-9150-f52607ae3690"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "determined",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Determined",
                            NameTrxCode = "feeling_name_determined",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8ceca85d-e889-46b6-b927-ed8846a9de70"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "exhausted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Exhausted",
                            NameTrxCode = "feeling_name_exhausted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7c652c24-c22b-4b74-888e-ebf329887447"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "glad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Glad",
                            NameTrxCode = "feeling_name_glad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("dd193858-6c9d-442a-819e-785c69e9eaf9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lucky",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lucky",
                            NameTrxCode = "feeling_name_lucky",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4e2c6399-4186-4357-a0f1-d3b344766e9c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "heartbroken",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Heartbroken",
                            NameTrxCode = "feeling_name_heartbroken",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2dd29189-d44b-4fed-b167-d8890b033a56"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "bored",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Bored",
                            NameTrxCode = "feeling_name_bored",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("145a7f4e-e9af-45be-92f0-dbf0189d23e1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sleepy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sleepy",
                            NameTrxCode = "feeling_name_sleepy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("589cd603-7f8e-43b2-a901-40a1e5af2b7d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "energised",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Energised",
                            NameTrxCode = "feeling_name_energised",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("08b4b4c8-238c-43db-9ec5-5883767c2999"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hungry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hungry",
                            NameTrxCode = "feeling_name_hungry",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7a1eb1da-7b0f-4b48-a6cb-4f6d4b209105"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "professional",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Professional",
                            NameTrxCode = "feeling_name_professional",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c90284b0-9cba-447b-91d0-be0607fcb164"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pained",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pained",
                            NameTrxCode = "feeling_name_pained",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("70b86cd6-5c78-49f1-a9b2-3a893cc86845"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "peaceful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Peaceful",
                            NameTrxCode = "feeling_name_peaceful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f80e554b-7398-4cee-97c7-151f66e82e53"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "disappointed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Disappointed",
                            NameTrxCode = "feeling_name_disappointed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0ba3ba65-1e0c-4382-8b01-148f66473dd8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "optimistic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Optimistic",
                            NameTrxCode = "feeling_name_optimistic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7b9de060-e550-40c7-ae15-23fb9cc86acb"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cold",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cold",
                            NameTrxCode = "feeling_name_cold",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8294b6fb-e1b0-42a2-b63d-19a8b2a5f8fe"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cute",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cute",
                            NameTrxCode = "feeling_name_cute",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("bed2ef91-0fca-4ef7-9323-6d0b7871043d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fabulous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fabulous",
                            NameTrxCode = "feeling_name_fabulous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ff4ab6a4-2e12-434f-bd31-c9aae0f0495d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "great",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Great",
                            NameTrxCode = "feeling_name_great",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1f32c2bd-926b-4d13-83af-e3cb46006071"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sorry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sorry",
                            NameTrxCode = "feeling_name_sorry",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2305a1fc-6bb5-4a39-96dc-34c84364ba2e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "super",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Super",
                            NameTrxCode = "feeling_name_super",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e71f8cad-7194-4069-ab73-38a9cf858c5c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worried",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worried",
                            NameTrxCode = "feeling_name_worried",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e0c98f92-ff42-4581-ae43-5acfe3315744"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "funny",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Funny",
                            NameTrxCode = "feeling_name_funny",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e3e82cff-9a87-4690-9c17-cff3ef888d32"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "bad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Bad",
                            NameTrxCode = "feeling_name_bad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5b3e0af7-9cbf-4e2b-94ca-21a8943769e0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "down",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Down",
                            NameTrxCode = "feeling_name_down",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ffcc670c-084e-4b95-bc53-81a6bd41137b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "inspired",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Inspired",
                            NameTrxCode = "feeling_name_inspired",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1305d278-b255-4046-b1b3-5150b8c98151"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "satisfied",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Satisfied",
                            NameTrxCode = "feeling_name_satisfied",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a3cf1a2d-96ec-46ac-a93d-09d2c302a1dd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pumped",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pumped",
                            NameTrxCode = "feeling_name_pumped",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8b3862d5-e081-428c-8efb-d1d4a9eb1aba"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "calm",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Calm",
                            NameTrxCode = "feeling_name_calm",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f1768471-7fbc-43c3-b09c-192499541343"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "confused",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Confused",
                            NameTrxCode = "feeling_name_confused",
                            ShortCode = "",
                            UnicodeIcon = "😕"
                        },
                        new
                        {
                            FeelingId = new Guid("2a155f6a-2032-409f-92b0-7aa20ff690b2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "goofy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Goofy",
                            NameTrxCode = "feeling_name_goofy",
                            ShortCode = "",
                            UnicodeIcon = "🤪"
                        },
                        new
                        {
                            FeelingId = new Guid("6649a7f2-f209-4d81-855b-7b799f985d33"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "missing",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Missing",
                            NameTrxCode = "feeling_name_missing",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4f66f5c8-54e4-4c30-bd3b-ff3d3e5fdc83"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "good",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Good",
                            NameTrxCode = "feeling_name_good",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4a18f89e-c9f9-4746-8247-b5406464a4c3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sarcastic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sarcastic",
                            NameTrxCode = "feeling_name_sarcastic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4865b3ae-151a-437d-aec6-c236bd7837db"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lonely",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lonely",
                            NameTrxCode = "feeling_name_lonely",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("33efc0e5-0bed-4dc2-9bfe-afa0be7785b9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "strong",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Strong",
                            NameTrxCode = "feeling_name_strong",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3c22049f-f1f5-4024-9683-24d5a96ce3f2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "concerned",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Concerned",
                            NameTrxCode = "feeling_name_concerned",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f252d7be-98b2-4843-b7dd-76473d25baab"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "special",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Special",
                            NameTrxCode = "feeling_name_special",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e0d15329-48e2-4de1-b923-f8e739a1f790"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "depressed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Depressed",
                            NameTrxCode = "feeling_name_depressed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2ad79475-c31f-44e2-af54-6acbb42189e0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "jolly",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Jolly",
                            NameTrxCode = "feeling_name_jolly",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ae64e3ba-706f-4c43-b8d9-1883563f1e2b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "curious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Curious",
                            NameTrxCode = "feeling_name_curious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d922162a-d1f9-4c59-8f07-06749004112e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "low",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Low",
                            NameTrxCode = "feeling_name_low",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6f4a0451-a067-4dcf-b642-0a3dade49a33"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "welcome",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Welcome",
                            NameTrxCode = "feeling_name_welcome",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("05eaec67-aba8-4023-b1ef-2db454ae851e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "broken",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Broken",
                            NameTrxCode = "feeling_name_broken",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("baf49aaf-9cbc-42ff-8b21-79495295f636"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "beautiful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Beautiful",
                            NameTrxCode = "feeling_name_beautiful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("de545dad-2dac-4cdb-8347-5c714a51ee7b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amazing",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amazing",
                            NameTrxCode = "feeling_name_amazing",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d645074c-dffe-48fb-aa37-c3a611c77f4b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "irritated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Irritated",
                            NameTrxCode = "feeling_name_irritated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("03dc9c4b-fae8-498b-b1b0-1590fef6f7ee"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stressed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stressed",
                            NameTrxCode = "feeling_name_stressed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5507246c-06e6-4d41-bb0a-4add0b1a6f4f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "incomplete",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Incomplete",
                            NameTrxCode = "feeling_name_incomplete",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a1d59a85-aeff-4796-b7a4-a6450a33b83a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hyper",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hyper",
                            NameTrxCode = "feeling_name_hyper",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("fa5578ab-fe0f-4d18-8cbf-8f3104dbb2c7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mischievous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mischievous",
                            NameTrxCode = "feeling_name_mischievous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4057bc42-626d-4928-ace5-3586cc417377"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amazed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amazed",
                            NameTrxCode = "feeling_name_amazed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5c7b26a8-035f-42e1-bd3f-e5c80d9cdb3e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "annoyed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Annoyed",
                            NameTrxCode = "feeling_name_annoyed",
                            ShortCode = "",
                            UnicodeIcon = "😒"
                        },
                        new
                        {
                            FeelingId = new Guid("39513aca-8aab-4bd4-ac8c-2a91601aadb8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fed",
                            NameTrxCode = "feeling_name_fed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1b4fe485-cf8c-491b-be7f-f510083dd677"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "puzzled",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Puzzled",
                            NameTrxCode = "feeling_name_puzzled",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("cbcfed12-e9b7-45e3-817a-dc15fd007176"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "furious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Furious",
                            NameTrxCode = "feeling_name_furious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5ea28d6a-47f1-4a82-a168-3a249e620bda"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "refreshed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Refreshed",
                            NameTrxCode = "feeling_name_refreshed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("fcaf302b-a1ed-4439-9e11-a2010ace1bba"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "accomplished",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Accomplished",
                            NameTrxCode = "feeling_name_accomplished",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("44c52173-1c8b-4ff8-9dc1-249eda495e80"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "surprised",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Surprised",
                            NameTrxCode = "feeling_name_surprised",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d8852ee1-774f-4740-a685-326d694f7ba8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "perplexed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Perplexed",
                            NameTrxCode = "feeling_name_perplexed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9c89b84c-a0ba-4b7a-9361-f60f83809a0c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "frustrated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Frustrated",
                            NameTrxCode = "feeling_name_frustrated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3c493747-95e1-4e78-a6f4-59ddae6453dd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "meh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Meh",
                            NameTrxCode = "feeling_name_meh",
                            ShortCode = "",
                            UnicodeIcon = "😐️"
                        },
                        new
                        {
                            FeelingId = new Guid("bfc3c2e0-0c13-436d-8379-bf7d8299f964"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pretty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pretty",
                            NameTrxCode = "feeling_name_pretty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7d057480-0743-497d-a80c-dbd87e3bbc25"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "better",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Better",
                            NameTrxCode = "feeling_name_better",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("236a1a77-b806-497c-9d3c-8cd129a2ccf7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "guilty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Guilty",
                            NameTrxCode = "feeling_name_guilty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1b4a2b76-145d-43db-a27e-01c550d32970"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "safe",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Safe",
                            NameTrxCode = "feeling_name_safe",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("124f1279-68a5-4335-a538-b502837c8943"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "free",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Free",
                            NameTrxCode = "feeling_name_free",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8c4778d1-051f-4d48-980d-9a0077e15752"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lost",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lost",
                            NameTrxCode = "feeling_name_lost",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("043af833-0934-4995-9035-e53b907191e9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "old",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Old",
                            NameTrxCode = "feeling_name_old",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1eb3bd74-fa27-4601-af9b-63a4e9da19aa"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lazy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lazy",
                            NameTrxCode = "feeling_name_lazy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f1de0012-b70c-45df-b436-c19bcd0fa368"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worse",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worse",
                            NameTrxCode = "feeling_name_worse",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("89ae9b29-5170-4044-b004-698e889adfb8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "horrible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Horrible",
                            NameTrxCode = "feeling_name_horrible",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("18efa9a7-dedc-4eae-9d2a-a50eeb8ba279"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "comfortable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Comfortable",
                            NameTrxCode = "feeling_name_comfortable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ea153439-3f9c-4eb0-9d43-11d824cf40eb"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stupid",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stupid",
                            NameTrxCode = "feeling_name_stupid",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c3fcb34f-6df8-40c1-b629-8ad51d63743a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ashamed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ashamed",
                            NameTrxCode = "feeling_name_ashamed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a052ca37-fd6c-4a88-b7f1-06c7325e88d0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "terrible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Terrible",
                            NameTrxCode = "feeling_name_terrible",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("47b15106-5c98-4b2c-b628-9f8eb51832a4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "asleep",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Asleep",
                            NameTrxCode = "feeling_name_asleep",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7f18c641-fa8b-4458-b6f8-f0c11f69627d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "well",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Well",
                            NameTrxCode = "feeling_name_well",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("af07d376-0e6f-4754-a3da-7340b5870397"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "alive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Alive",
                            NameTrxCode = "feeling_name_alive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("13e32dcc-b60d-4ea2-87ea-e541168f3d2d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "shy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Shy",
                            NameTrxCode = "feeling_name_shy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d511a997-bc56-4d4e-ab3f-30d647268d6f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rough",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rough",
                            NameTrxCode = "feeling_name_rough",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e939b867-e72a-4e9a-a0c8-512e488c9f9b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "weird",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Weird",
                            NameTrxCode = "feeling_name_weird",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d6184707-0dcf-4195-9ae9-72a3dce92389"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "human",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Human",
                            NameTrxCode = "feeling_name_human",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c5ee0217-f7bd-45fb-8b9d-5d1819a82e22"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hurt",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hurt",
                            NameTrxCode = "feeling_name_hurt",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("29532088-30b6-48b6-ad0f-3cd3b28dc727"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awful",
                            NameTrxCode = "feeling_name_awful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7722d57a-2115-4966-90a1-3a4cf84ee4f6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "normal",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Normal",
                            NameTrxCode = "feeling_name_normal",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("64efb0de-d6e8-4786-90b1-8069a92b55a1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "warm",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Warm",
                            NameTrxCode = "feeling_name_warm",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("074c0bd2-2aba-4688-abd9-3c1af64e07db"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "insecure",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Insecure",
                            NameTrxCode = "feeling_name_insecure",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1f6ebfb2-2b1d-4ae5-b375-9dbd6a47bcdf"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "weak",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Weak",
                            NameTrxCode = "feeling_name_weak",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("68368fc1-da27-4090-a0bc-39701cd444d7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "kind",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Kind",
                            NameTrxCode = "feeling_name_kind",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2e1e707d-0819-4385-8e43-46a6be053c06"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fine",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fine",
                            NameTrxCode = "feeling_name_fine",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d9b18d3b-99a8-4d94-ac1f-53166869f576"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dumb",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dumb",
                            NameTrxCode = "feeling_name_dumb",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("872a9e68-1847-4881-9cf7-ea84414b1898"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nice",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nice",
                            NameTrxCode = "feeling_name_nice",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("72cbca49-bbc8-4a74-8bb6-8b774449f14d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "important",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Important",
                            NameTrxCode = "feeling_name_important",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("78acbba9-3fb4-4968-b6b4-d4c75d93ffc5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "crappy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Crappy",
                            NameTrxCode = "feeling_name_crappy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("36e9cba3-19e1-4d30-90b1-df6a6bdd9796"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "uncomfortable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Uncomfortable",
                            NameTrxCode = "feeling_name_uncomfortable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ae975e84-be62-45df-9519-2d714cc4b746"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worthless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worthless",
                            NameTrxCode = "feeling_name_worthless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5b976d63-b090-43e3-9241-bc7c52b2a45d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ready",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ready",
                            NameTrxCode = "feeling_name_ready",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0cd1f55f-7f72-48b2-b8ba-296b8abce88b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "different",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Different",
                            NameTrxCode = "feeling_name_different",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d488891b-12b3-4189-9b8f-d831afd063ff"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "helpless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Helpless",
                            NameTrxCode = "feeling_name_helpless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6fbac255-b51e-4403-ae02-6a7b7df3f0ac"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awkward",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awkward",
                            NameTrxCode = "feeling_name_awkward",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("832051b9-5004-40d3-b325-fc6d3f1fc2f8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "drunk",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Drunk",
                            NameTrxCode = "feeling_name_drunk",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6d58d385-5a97-4a6c-81b6-e7b23269dc55"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "overwhelmed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Overwhelmed",
                            NameTrxCode = "feeling_name_overwhelmed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0d6837d9-bef5-4301-913e-7ba9c68965cf"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hopeless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hopeless",
                            NameTrxCode = "feeling_name_hopeless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("21ac6ba3-26f7-4871-ad2c-438d2adaf607"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "whole",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Whole",
                            NameTrxCode = "feeling_name_whole",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2fb2c0f2-eb47-4d7e-b016-1768aea88b45"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "miserable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Miserable",
                            NameTrxCode = "feeling_name_miserable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("73fca304-f02c-407a-b21b-bb747edcbb8d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mad",
                            NameTrxCode = "feeling_name_mad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("211f7345-3c4c-4d55-a84a-72f23f1d4f6e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "deep",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Deep",
                            NameTrxCode = "feeling_name_deep",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8f03f5e3-6579-4d2a-97f9-70e4c19a6878"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "yucky",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Yucky",
                            NameTrxCode = "feeling_name_yucky",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d92cb004-887f-4186-8d0e-24d2c956c156"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nervous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nervous",
                            NameTrxCode = "feeling_name_nervous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("590949e5-397c-42a4-a39c-bd7b301ed51c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blue",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blue",
                            NameTrxCode = "feeling_name_blue",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("95667c93-5210-4fb6-8590-b1d1963f0647"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wanted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wanted",
                            NameTrxCode = "feeling_name_wanted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9e3f15a9-7a4b-4184-8de2-837f5bf15abf"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "honoured",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Honoured",
                            NameTrxCode = "feeling_name_honoured",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b9ad62eb-d56c-4696-b5cb-feaf125f8e4d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "light",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Light",
                            NameTrxCode = "feeling_name_light",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("df8c8566-9fcf-4068-8618-8a516a7f3f67"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hung-over",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hung-Over",
                            NameTrxCode = "feeling_name_hung-over",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f4b3b4a7-b441-4e2b-882f-fd67fd844f8e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "secure",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Secure",
                            NameTrxCode = "feeling_name_secure",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3e3e48ee-cb23-4703-8bf6-e721b9434d9d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "naked",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Naked",
                            NameTrxCode = "feeling_name_naked",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1a93fc4b-cc3a-4700-85f6-4c47ad899341"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dirty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dirty",
                            NameTrxCode = "feeling_name_dirty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("fad8090a-0de8-44a6-9017-f5293fcb89f5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unimportant",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unimportant",
                            NameTrxCode = "feeling_name_unimportant",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("067d2c9b-e98e-43d0-8ddd-de27d1856e96"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mighty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mighty",
                            NameTrxCode = "feeling_name_mighty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6e75efcc-7a70-4c78-8eca-94724da74f52"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "scared",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Scared",
                            NameTrxCode = "feeling_name_scared",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("48599062-63e3-473a-88f5-202fa98bbca5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "jealous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Jealous",
                            NameTrxCode = "feeling_name_jealous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("cfe44450-adc3-4af3-9aa8-5c254c2fdb88"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sore",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sore",
                            NameTrxCode = "feeling_name_sore",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("01603187-ec5c-450a-96b9-1ce4a2fc1f86"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unwanted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unwanted",
                            NameTrxCode = "feeling_name_unwanted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("bac799a0-1199-433f-969a-34659e201606"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "appreciated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Appreciated",
                            NameTrxCode = "feeling_name_appreciated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("bd76d2ba-551f-4034-8bee-44c24411d132"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "full",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Full",
                            NameTrxCode = "feeling_name_full",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c7df61ac-0036-4672-ab9c-5a7f319d5e49"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "busy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Busy",
                            NameTrxCode = "feeling_name_busy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("72d3ebee-5ee8-4f5d-b84e-e1ff60017fd5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "small",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Small",
                            NameTrxCode = "feeling_name_small",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2029f255-582d-4b03-a49d-99ae5c838d12"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unloved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unloved",
                            NameTrxCode = "feeling_name_unloved",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e6933824-4080-473c-bccb-5e5cb6a0c6b9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "useless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Useless",
                            NameTrxCode = "feeling_name_useless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("dd0e77d6-e5e6-45c5-95b5-e66180401592"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "qualified",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Qualified",
                            NameTrxCode = "feeling_name_qualified",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("59435ea0-ba5b-44f2-9495-e80cf3dd05a4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blah",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blah",
                            NameTrxCode = "feeling_name_blah",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0712c675-67c5-4059-b325-7731da69f628"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "impatient",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Impatient",
                            NameTrxCode = "feeling_name_impatient",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c62f5b1a-4be0-4a93-8e29-73ec20876b2d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "privileged",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Privileged",
                            NameTrxCode = "feeling_name_privileged",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("82c3ce92-a301-45ef-8152-d29f507a329b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "trapped",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Trapped",
                            NameTrxCode = "feeling_name_trapped",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("677e227b-1a4f-4281-b744-830f8a8c3bec"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thirsty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thirsty",
                            NameTrxCode = "feeling_name_thirsty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f4342aec-aba2-413c-a22d-e7b0c198d486"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nauseous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nauseous",
                            NameTrxCode = "feeling_name_nauseous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e1c1084e-e989-476a-824f-cdd53ef208ce"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "upset",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Upset",
                            NameTrxCode = "feeling_name_upset",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b709ae99-0dd5-46ac-b6a1-4b443163bb43"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "offended",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Offended",
                            NameTrxCode = "feeling_name_offended",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f3020764-d044-482c-b9ad-89138dee53c1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "numb",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Numb",
                            NameTrxCode = "feeling_name_numb",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("24397290-74fc-4947-8da9-d40b575900a5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "perfect",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Perfect",
                            NameTrxCode = "feeling_name_perfect",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("857680e5-a9ff-4a4b-acdd-a6dc4c0c906d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "challenged",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Challenged",
                            NameTrxCode = "feeling_name_challenged",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("589a2dfe-df9a-4582-b55e-7e2e883af3c4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "threatened",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Threatened",
                            NameTrxCode = "feeling_name_threatened",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0de407d6-4865-40bf-ad53-4f9dc3f00580"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "relieved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Relieved",
                            NameTrxCode = "feeling_name_relieved",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7b74a584-387e-46bb-a99a-63a71baf8879"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stuck",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stuck",
                            NameTrxCode = "feeling_name_stuck",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("14caa29a-a8f9-4219-81c5-f6a31f3e4e1f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "strange",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Strange",
                            NameTrxCode = "feeling_name_strange",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("997e6cd1-86d0-4214-9a53-f745188362f9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "embarrassed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Embarrassed",
                            NameTrxCode = "feeling_name_embarrassed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("dda26b56-c85c-41d0-9264-3b605e92e14b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rested",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rested",
                            NameTrxCode = "feeling_name_rested",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7d1f1c5d-e229-442b-b427-4494981d0566"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "smart",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Smart",
                            NameTrxCode = "feeling_name_smart",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a4c403ba-15dd-498c-a263-69055f19e863"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cheated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cheated",
                            NameTrxCode = "feeling_name_cheated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("405c02ad-e2fb-4404-9ce8-3536a486400c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "betrayed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Betrayed",
                            NameTrxCode = "feeling_name_betrayed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e2421860-0207-41b7-8a62-2d2ee39c8042"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "anxious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Anxious",
                            NameTrxCode = "feeling_name_anxious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0ddc35eb-b78b-4668-bdbd-9e6bc10646f9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "aggravated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Aggravated",
                            NameTrxCode = "feeling_name_aggravated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9b2be3c8-b5a6-4420-8de4-38a1779cff79"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "evil",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Evil",
                            NameTrxCode = "feeling_name_evil",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("402986b7-7b8f-4f0b-bfe5-88a112ba5906"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ignored",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ignored",
                            NameTrxCode = "feeling_name_ignored",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("eb7708f5-0ba4-43e8-9102-111fff100e1b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "regret",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Regret",
                            NameTrxCode = "feeling_name_regret",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("de2972e4-f5e2-4ebc-8279-254c5a3fe5a6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "healthy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Healthy",
                            NameTrxCode = "feeling_name_healthy",
                            ShortCode = "",
                            UnicodeIcon = "😊"
                        },
                        new
                        {
                            FeelingId = new Guid("e921b0a8-4188-415d-aa4f-96bb3daacaa4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "generous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Generous",
                            NameTrxCode = "feeling_name_generous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2fbeb2a6-d760-4660-80bb-27da49902431"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rich",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rich",
                            NameTrxCode = "feeling_name_rich",
                            ShortCode = "",
                            UnicodeIcon = "🤑"
                        },
                        new
                        {
                            FeelingId = new Guid("e20f033d-a643-497d-8164-ad97a672e9ff"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "afraid",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Afraid",
                            NameTrxCode = "feeling_name_afraid",
                            ShortCode = "",
                            UnicodeIcon = "😨"
                        },
                        new
                        {
                            FeelingId = new Guid("abee92c1-6996-448d-8d5a-d47af5715cd6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "broke",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Broke",
                            NameTrxCode = "feeling_name_broke",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("941e3057-d199-40a8-9f66-b4a1c0c76961"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "invisible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(7232), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Invisible",
                            NameTrxCode = "feeling_name_invisible",
                            ShortCode = "",
                            UnicodeIcon = "🫥"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<int>("Direction")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(5);

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.HasIndex("ThreeLetterCode")
                        .IsUnique();

                    b.HasIndex("TwoLetterCode")
                        .IsUnique();

                    b.ToTable("Languages", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a1d5cdb-6789-4211-8f88-c3cc6ecf154c"),
                            Code = "EN",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "English",
                            NameTrxCode = "language_name_en",
                            ThreeLetterCode = "ENG",
                            TwoLetterCode = "EN"
                        },
                        new
                        {
                            Id = new Guid("cc118c2e-56b5-420d-99b9-e31be6318951"),
                            Code = "AF",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Afrikaans",
                            NameTrxCode = "language_name_af",
                            ThreeLetterCode = "AFR",
                            TwoLetterCode = "AF"
                        },
                        new
                        {
                            Id = new Guid("fef7216e-caac-41e7-8626-9026c174c50e"),
                            Code = "FR",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "French",
                            NameTrxCode = "language_name_fr",
                            ThreeLetterCode = "FRA",
                            TwoLetterCode = "FR"
                        },
                        new
                        {
                            Id = new Guid("044f8e8a-9132-4dc8-99f8-55546d50de37"),
                            Code = "ZH",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Chinese",
                            NameTrxCode = "language_name_zh",
                            ThreeLetterCode = "ZHO",
                            TwoLetterCode = "ZH"
                        },
                        new
                        {
                            Id = new Guid("5a091b8c-4e1a-447e-903c-1d3994eb353e"),
                            Code = "HE",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 1,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hebrew",
                            NameTrxCode = "language_name_he",
                            ThreeLetterCode = "HEB",
                            TwoLetterCode = "HE"
                        },
                        new
                        {
                            Id = new Guid("5efb8347-66d0-418c-bb65-31127b2d01d5"),
                            Code = "HI",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hindi",
                            NameTrxCode = "language_name_hi",
                            ThreeLetterCode = "HIN",
                            TwoLetterCode = "HI"
                        },
                        new
                        {
                            Id = new Guid("883fe16a-169f-4ddd-a238-c6ab424743ab"),
                            Code = "RU",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Russian",
                            NameTrxCode = "language_name_ru",
                            ThreeLetterCode = "RUS",
                            TwoLetterCode = "RU"
                        },
                        new
                        {
                            Id = new Guid("b9c4ad50-6076-4b68-a547-106548dc9ff7"),
                            Code = "ES",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Spanish",
                            NameTrxCode = "language_name_es",
                            ThreeLetterCode = "ESP",
                            TwoLetterCode = "ES"
                        },
                        new
                        {
                            Id = new Guid("0377fb65-8ab6-4070-9dcc-d7c326a2cd82"),
                            Code = "ZU",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(1976), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Zulu",
                            NameTrxCode = "language_name_zu",
                            ThreeLetterCode = "ZUL",
                            TwoLetterCode = "ZU"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.PhoneNumberType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("PhoneNumberTypes", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("UnicodeIcon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.ToTable("Reactions", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70ac643f-4ed1-4516-8cd4-acd29d593ebd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "like",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Like",
                            NameTrxCode = "reaction_name_like",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("6dcce034-bfd7-4872-95fa-47c74768dc2e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dislike",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dislike",
                            NameTrxCode = "reaction_name_dislike",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("82037233-161d-4ff0-b2df-4240938bc179"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "love",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Love",
                            NameTrxCode = "reaction_name_love",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("ee378421-6005-4f2b-a909-8ca0471cd96f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "care",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Care",
                            NameTrxCode = "reaction_name_care",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("4678ded6-0a22-4d21-9ecb-12889c910e03"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wow",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wow",
                            NameTrxCode = "reaction_name_wow",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("ae1e44d0-10c1-4fee-bb75-0f16069aeb95"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "laugh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Haha",
                            NameTrxCode = "reaction_name_laugh",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("aa293935-4a72-44f9-8716-d3360c4a45fd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "angry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Angry",
                            NameTrxCode = "reaction_name_angry",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("4cc7041f-b9d4-4593-8ccc-44a8adaf5270"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 248, DateTimeKind.Unspecified).AddTicks(5561), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sad",
                            NameTrxCode = "reaction_name_sad",
                            UnicodeIcon = "1"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<int>("DataType")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(5);

                    b.Property<string>("HelpText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("SettingCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("SettingCategoryId");

                    b.ToTable("Settings", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61bf10c2-2b11-4b1c-969e-2274ff1d0b81"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "AU",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Regional Format",
                            ShortDescription = "Formats for dates, times and numbers."
                        },
                        new
                        {
                            Id = new Guid("523e4780-8a65-47e8-af74-bf59265e0113"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "EN",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Language Code",
                            ShortDescription = "The language code of the Astrana instance user."
                        },
                        new
                        {
                            Id = new Guid("43852f40-5f7b-4701-904a-b5415f55aa0b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "AUS Eastern Standard Time",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Time Zone",
                            ShortDescription = "The time zone of the Astrana instance user."
                        },
                        new
                        {
                            Id = new Guid("eaf0cbf5-d1d7-4858-a4a3-648615b96b1b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "localhost",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Host Name",
                            ShortDescription = "The address of the Astrana instance."
                        },
                        new
                        {
                            Id = new Guid("c51b9951-f193-4490-89f4-0d0769552e03"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Host Port Number",
                            ShortDescription = "The host port number of the Astrana instance."
                        },
                        new
                        {
                            Id = new Guid("95b0d595-6bb6-4d7a-9f5f-7b704847104c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Idp Issuer Signing Key Secret",
                            ShortDescription = "The secret used for generating the Idp Issuer Signing Key for the Astrana instance.",
                            Value = "69473DFCE4E2D15A343495F3612FBD2C69473DFCE4E2D15A343495F3612FBD2C"
                        },
                        new
                        {
                            Id = new Guid("067a784e-6aec-4d8d-b44c-71e4eadc90e5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 21,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Default Skin Tone",
                            ShortDescription = "The secret used for generating the Idp Issuer Signing Key for the Astrana instance.",
                            Value = "69473DFCE4E2D15A343495F3612FBD2C69473DFCE4E2D15A343495F3612FBD2C"
                        },
                        new
                        {
                            Id = new Guid("089afae1-e9fa-4fd7-a2db-13442aa7727f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 1,
                            DefaultValue = "0",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 8, 4, 6, 30, 247, DateTimeKind.Unspecified).AddTicks(8423), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Multi-factor Authentication",
                            ShortDescription = "Turn multi-factor authentication on/off."
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("SettingCategories", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.ToTable("EmailAddresses", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("InstantMessengerUsernames", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.ToTable("PhoneNumbers", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Audio", b =>
                {
                    b.Property<Guid>("AudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("AudioId");

                    b.ToTable("Audios", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Comment", b =>
                {
                    b.Property<Guid>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("TargeCommentCommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TargetAudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("TargetCommentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("TargetContentCollectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("TargetGifId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("TargetImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("TargetLinkId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<long?>("TargetPostId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("TargetVideoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("CommentId");

                    b.HasIndex("TargeCommentCommentId");

                    b.HasIndex("TargetAudioId");

                    b.HasIndex("TargetContentCollectionId");

                    b.HasIndex("TargetGifId");

                    b.HasIndex("TargetImageId");

                    b.HasIndex("TargetLinkId");

                    b.HasIndex("TargetPostId");

                    b.HasIndex("TargetVideoId");

                    b.ToTable("Comments", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollection", b =>
                {
                    b.Property<Guid>("ContentCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(1);

                    b.HasKey("ContentCollectionId");

                    b.ToTable("ContentCollections", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollectionItem", b =>
                {
                    b.Property<Guid>("ContentCollectionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.Property<Guid>("ContentCollectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("GifId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("LinkId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<int>("MediaType")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.HasKey("ContentCollectionItemId");

                    b.HasIndex("AudioId");

                    b.HasIndex("ContentCollectionId");

                    b.HasIndex("GifId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LinkId");

                    b.HasIndex("VideoId");

                    b.ToTable("ContentCollectionItems", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentSafetyRating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("ContentSafetyRatings", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ExternalContentSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CharSet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("PreviewImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<string>("Robots")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("PreviewImageId");

                    b.ToTable("ExternalContentSubscriptions", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)")
                        .HasColumnOrder(1);

                    b.HasKey("ImageId");

                    b.ToTable("Images", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Link", b =>
                {
                    b.Property<Guid>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CharSet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("PreviewImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<string>("Robots")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(1);

                    b.HasKey("LinkId");

                    b.HasIndex("PreviewImageId");

                    b.ToTable("Links", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Location", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("LocationId");

                    b.ToTable("Locations", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Post", b =>
                {
                    b.Property<long>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PostId"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Text")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("PostId");

                    b.ToTable("Posts", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.PostAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.Property<string>("Caption")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("ContentCollectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("FeelingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(11);

                    b.Property<Guid?>("GifId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("LinkId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(10);

                    b.Property<long?>("PostId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(1);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("AudioId");

                    b.HasIndex("ContentCollectionId");

                    b.HasIndex("FeelingId");

                    b.HasIndex("GifId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LinkId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PostId");

                    b.HasIndex("VideoId");

                    b.ToTable("PostAttachments", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.ToTable("Tags", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Video", b =>
                {
                    b.Property<Guid>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("VideoId");

                    b.ToTable("Videos", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(10);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(20);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(4);

                    b.Property<short>("FailedAccessCount")
                        .HasColumnType("smallint")
                        .HasColumnOrder(17);

                    b.Property<bool>("IsEmailAddressConfirmed")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsLockoutEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(16);

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("bit")
                        .HasColumnOrder(13);

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(14);

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(19);

                    b.Property<DateTimeOffset>("LastLoginTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(21);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(15);

                    b.Property<string>("NormalizedEmailAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(8);

                    b.Property<string>("PhoneCountryCodeISO")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(11);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(12);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(9);

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(18);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("UserAccounts", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccountRoleRel", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "UserRoleId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserAccountRoleRel", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.Peer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AudienceId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsMuted")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.HasIndex("AudienceId1");

                    b.ToTable("Peers", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.PeerConnectionRequestReceived", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerPreviewAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("PeerConnectionRequestsReceived", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.PeerConnectionRequestSubmitted", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerPreviewAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("PeerConnectionRequestsSubmitted", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserEmailAddressRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("EmailAddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "EmailAddressId");

                    b.HasIndex("EmailAddressId");

                    b.ToTable("UserEmailAddressRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserMessengerUsernameRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("MessengerUsernameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "MessengerUsernameId");

                    b.HasIndex("MessengerUsernameId");

                    b.ToTable("MessengerUsernameRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserPhoneNumberRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PhoneNumberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "PhoneNumberId");

                    b.HasIndex("PhoneNumberId");

                    b.ToTable("UserPhoneNumberRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("CoverPictureImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(6);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<string>("Introduction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("MiddleNames")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("ProfilePictureImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("CoverPictureImageId");

                    b.HasIndex("ProfilePictureImageId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserProfiles", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<short?>("DisplayOrder")
                        .HasColumnType("smallint")
                        .HasColumnOrder(7);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<string>("Label")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileDetails", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.User.UserProfileDetail", null)
                        .WithMany("Audiences")
                        .HasForeignKey("UserProfileDetailId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Country", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("Countries")
                        .HasForeignKey("AudienceId");

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Language", null)
                        .WithMany("Countries")
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSetting", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", "SettingCategory")
                        .WithMany("Settings")
                        .HasForeignKey("SettingCategoryId");

                    b.Navigation("SettingCategory");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Comment", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Comment", "TargeComment")
                        .WithMany()
                        .HasForeignKey("TargeCommentCommentId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "TargetAudio")
                        .WithMany()
                        .HasForeignKey("TargetAudioId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "TargetContentCollection")
                        .WithMany()
                        .HasForeignKey("TargetContentCollectionId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "TargetGif")
                        .WithMany()
                        .HasForeignKey("TargetGifId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "TargetImage")
                        .WithMany()
                        .HasForeignKey("TargetImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "TargetLink")
                        .WithMany()
                        .HasForeignKey("TargetLinkId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Post", "TargetPost")
                        .WithMany()
                        .HasForeignKey("TargetPostId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Video", "TargetVideo")
                        .WithMany()
                        .HasForeignKey("TargetVideoId");

                    b.Navigation("TargeComment");

                    b.Navigation("TargetAudio");

                    b.Navigation("TargetContentCollection");

                    b.Navigation("TargetGif");

                    b.Navigation("TargetImage");

                    b.Navigation("TargetLink");

                    b.Navigation("TargetPost");

                    b.Navigation("TargetVideo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollectionItem", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "ContentCollection")
                        .WithMany("ContentCollectionItems")
                        .HasForeignKey("ContentCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Gif")
                        .WithMany()
                        .HasForeignKey("GifId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Audio");

                    b.Navigation("ContentCollection");

                    b.Navigation("Gif");

                    b.Navigation("Image");

                    b.Navigation("Link");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ExternalContentSubscription", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "PreviewImage")
                        .WithMany()
                        .HasForeignKey("PreviewImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviewImage");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Link", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "PreviewImage")
                        .WithMany()
                        .HasForeignKey("PreviewImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviewImage");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.PostAttachment", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "ContentCollection")
                        .WithMany()
                        .HasForeignKey("ContentCollectionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Feeling", "Feeling")
                        .WithMany()
                        .HasForeignKey("FeelingId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Gif")
                        .WithMany()
                        .HasForeignKey("GifId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Post", null)
                        .WithMany("Attachments")
                        .HasForeignKey("PostId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Audio");

                    b.Navigation("ContentCollection");

                    b.Navigation("Feeling");

                    b.Navigation("Gif");

                    b.Navigation("Image");

                    b.Navigation("Link");

                    b.Navigation("Location");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Tag", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("Tags")
                        .HasForeignKey("AudienceId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccountRoleRel", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserRole", "UserRole")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.Peer", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("PeersExcluded")
                        .HasForeignKey("AudienceId");

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("PeersIncluded")
                        .HasForeignKey("AudienceId1");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserEmailAddressRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", "EmailAddress")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("EmailAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailAddress");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserMessengerUsernameRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", "MessengerUsername")
                        .WithMany("MessengerUsernames")
                        .HasForeignKey("MessengerUsernameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("MessengerUsernames")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessengerUsername");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserPhoneNumberRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", "PhoneNumber")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneNumber");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfile", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "CoverPicture")
                        .WithMany()
                        .HasForeignKey("CoverPictureImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoverPicture");

                    b.Navigation("ProfilePicture");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.User.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("PeersExcluded");

                    b.Navigation("PeersIncluded");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Language", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", b =>
                {
                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", b =>
                {
                    b.Navigation("EmailAddresses");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", b =>
                {
                    b.Navigation("MessengerUsernames");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", b =>
                {
                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollection", b =>
                {
                    b.Navigation("ContentCollectionItems");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Post", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccount", b =>
                {
                    b.Navigation("EmailAddresses");

                    b.Navigation("MessengerUsernames");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("UserAccountRoles");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserRole", b =>
                {
                    b.Navigation("UserAccountRoles");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.Navigation("Audiences");
                });
#pragma warning restore 612, 618
        }
    }
}
