// <auto-generated />
using System;
using Astrana.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Astrana.Core.Data.Migrations.MSSqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231010002330_ProfilePictureCollections")]
    partial class ProfilePictureCollections
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Astrana.Core.Data.Entities.AccessManagement.ApiAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("ApiAccessTokens", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<short?>("MaximumAge")
                        .HasColumnType("smallint")
                        .HasColumnOrder(6);

                    b.Property<short?>("MinimumAge")
                        .HasColumnType("smallint")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("UserProfileDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserProfileDetailId");

                    b.ToTable("Audiences", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(4);

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.HasIndex("ThreeLetterCode")
                        .IsUnique();

                    b.HasIndex("TwoLetterCode")
                        .IsUnique();

                    b.ToTable("Countries", "config");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Australia",
                            NameTrxCode = "country_name_au",
                            ThreeLetterCode = "AUS",
                            TwoLetterCode = "AU"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Brazil",
                            NameTrxCode = "country_name_br",
                            ThreeLetterCode = "BRA",
                            TwoLetterCode = "BR"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "China",
                            NameTrxCode = "country_name_cn",
                            ThreeLetterCode = "CHN",
                            TwoLetterCode = "CN"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "France",
                            NameTrxCode = "country_name_fr",
                            ThreeLetterCode = "FRA",
                            TwoLetterCode = "FR"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "India",
                            NameTrxCode = "country_name_in",
                            ThreeLetterCode = "IND",
                            TwoLetterCode = "IN"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Israel",
                            NameTrxCode = "country_name_il",
                            ThreeLetterCode = "ILR",
                            TwoLetterCode = "IL"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Russia",
                            NameTrxCode = "country_name_ru",
                            ThreeLetterCode = "RUS",
                            TwoLetterCode = "RU"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "South Africa",
                            NameTrxCode = "country_name_za",
                            ThreeLetterCode = "ZAF",
                            TwoLetterCode = "ZA"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Spain",
                            NameTrxCode = "country_name_es",
                            ThreeLetterCode = "ESP",
                            TwoLetterCode = "ES"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "United Kingdom",
                            NameTrxCode = "country_name_gb",
                            ThreeLetterCode = "GBR",
                            TwoLetterCode = "GB"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8085), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "United States",
                            NameTrxCode = "country_name_us",
                            ThreeLetterCode = "USA",
                            TwoLetterCode = "US"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.FeatureToggle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<string>("FeatureDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsFeatureDisabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.HasIndex("FeatureName")
                        .IsUnique();

                    b.ToTable("FeatureToggles", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Feeling", b =>
                {
                    b.Property<Guid>("FeelingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(5);

                    b.Property<string>("UnicodeIcon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(4);

                    b.HasKey("FeelingId");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.ToTable("Feelings", "config");

                    b.HasData(
                        new
                        {
                            FeelingId = new Guid("84412768-f0ed-4937-846e-23bf357d536a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "happy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Happy",
                            NameTrxCode = "feeling_name_happy",
                            ShortCode = "",
                            UnicodeIcon = "😀"
                        },
                        new
                        {
                            FeelingId = new Guid("2e666abc-0596-48b4-8bbc-5c98a3d98a29"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blessed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blessed",
                            NameTrxCode = "feeling_name_blessed",
                            ShortCode = "",
                            UnicodeIcon = "😇"
                        },
                        new
                        {
                            FeelingId = new Guid("4c35c8b0-b054-4110-bb3e-b4e06c24a4e6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "loved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Loved",
                            NameTrxCode = "feeling_name_loved",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            FeelingId = new Guid("36455f23-9a39-4b79-b47b-c95f4f127402"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sad",
                            NameTrxCode = "feeling_name_sad",
                            ShortCode = "",
                            UnicodeIcon = "🙁"
                        },
                        new
                        {
                            FeelingId = new Guid("6e357e6f-4b49-46d3-a812-62a6ccee0ffa"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lovely",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lovely",
                            NameTrxCode = "feeling_name_lovely",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            FeelingId = new Guid("93af7ecb-1a5a-4501-929f-c9b35a15b4c8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thankful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thankful",
                            NameTrxCode = "feeling_name_thankful",
                            ShortCode = "",
                            UnicodeIcon = "😄"
                        },
                        new
                        {
                            FeelingId = new Guid("e53b2ae6-38df-4d89-9734-d277df55bb8a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "excited",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Excited",
                            NameTrxCode = "feeling_name_excited",
                            ShortCode = "",
                            UnicodeIcon = "🤩"
                        },
                        new
                        {
                            FeelingId = new Guid("baa43c49-71fc-4529-a0cc-4bdc7fbfdf54"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "in love",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "In Love",
                            NameTrxCode = "feeling_name_in_love",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            FeelingId = new Guid("15063c49-3ff7-4d42-bade-1d90a0b673f4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "crazy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Crazy",
                            NameTrxCode = "feeling_name_crazy",
                            ShortCode = "",
                            UnicodeIcon = "🤪"
                        },
                        new
                        {
                            FeelingId = new Guid("b58add5c-9aa5-4279-9c2c-d570c1c573fc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "grateful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Grateful",
                            NameTrxCode = "feeling_name_grateful",
                            ShortCode = "",
                            UnicodeIcon = "😄"
                        },
                        new
                        {
                            FeelingId = new Guid("c61ac2b6-10ad-4f4c-b790-8b9cad3f019e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blissful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blissful",
                            NameTrxCode = "feeling_name_blissful",
                            ShortCode = "",
                            UnicodeIcon = "😊"
                        },
                        new
                        {
                            FeelingId = new Guid("51080e90-10b5-4c73-8825-59bbf42c0b1c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fantastic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fantastic",
                            NameTrxCode = "feeling_name_fantastic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e52fa96e-d7c0-468b-8737-605f5fffc867"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "silly",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Silly",
                            NameTrxCode = "feeling_name_silly",
                            ShortCode = "",
                            UnicodeIcon = "😜"
                        },
                        new
                        {
                            FeelingId = new Guid("11530a34-d09c-4812-baa1-93b0bbabe08a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "festive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Festive",
                            NameTrxCode = "feeling_name_festive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f26fe4ff-1b16-4af6-a2da-0f9c5025bfc9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wonderful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wonderful",
                            NameTrxCode = "feeling_name_wonderful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4f85c24f-1fe3-4c38-8a3c-359cb59a5653"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cool",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cool",
                            NameTrxCode = "feeling_name_cool",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("fbdaa873-2869-4450-ba84-c54285e0ebec"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amused",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amused",
                            NameTrxCode = "feeling_name_amused",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("67d8fd6f-7523-43c4-9faf-d64bf7069be8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "relaxed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Relaxed",
                            NameTrxCode = "feeling_name_relaxed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d4e478d8-57e5-4510-8856-966497255740"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "positive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Positive",
                            NameTrxCode = "feeling_name_positive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8dcf971d-a013-492e-87a5-76e3b8e66800"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "chill",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Chill",
                            NameTrxCode = "feeling_name_chill",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3625a324-2c17-48cd-94cd-da2b529d03d7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hopeful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hopeful",
                            NameTrxCode = "feeling_name_hopeful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6bc9443f-0912-4175-a1dd-f3aa69f89f2b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "joyful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Joyful",
                            NameTrxCode = "feeling_name_joyful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6c655368-fdd8-4ac1-87e5-85ddef2671c4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "tired",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Tired",
                            NameTrxCode = "feeling_name_tired",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("32cf31bb-c763-4885-98d4-27738d057744"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "motivated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Motivated",
                            NameTrxCode = "feeling_name_motivated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("da276b75-6329-43b1-b3c4-d8107261fcdd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "proud",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Proud",
                            NameTrxCode = "feeling_name_proud",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("072ba7aa-0e4f-4dcd-91e4-b75c22b72a4c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "alone",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Alone",
                            NameTrxCode = "feeling_name_alone",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c21c552f-2acc-4afc-a1c9-da8e1b315368"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thoughtful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thoughtful",
                            NameTrxCode = "feeling_name_thoughtful",
                            ShortCode = "",
                            UnicodeIcon = "🤔"
                        },
                        new
                        {
                            FeelingId = new Guid("6ba570d7-94fa-4300-ac9b-9490a4f37f61"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "OK",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ok",
                            NameTrxCode = "feeling_name_OK",
                            ShortCode = "",
                            UnicodeIcon = "👌"
                        },
                        new
                        {
                            FeelingId = new Guid("343e27fd-ec1b-4ce9-b0b9-10896c05ddc2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nostalgic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nostalgic",
                            NameTrxCode = "feeling_name_nostalgic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("49b7c5ca-5f67-4d79-b7fb-76c2119bd9d8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "angry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Angry",
                            NameTrxCode = "feeling_name_angry",
                            ShortCode = "",
                            UnicodeIcon = "😠"
                        },
                        new
                        {
                            FeelingId = new Guid("eb529794-5711-497f-9b7e-13a0638159d6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sick",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sick",
                            NameTrxCode = "feeling_name_sick",
                            ShortCode = "",
                            UnicodeIcon = "🤢"
                        },
                        new
                        {
                            FeelingId = new Guid("daf24d99-8805-473c-ae33-b5c9ced88be2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "delighted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Delighted",
                            NameTrxCode = "feeling_name_delighted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f448ed17-43a7-4efa-8318-431972b80bf4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "drained",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Drained",
                            NameTrxCode = "feeling_name_drained",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2004c462-93a5-4319-bd90-8ce2daf80ea8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "emotional",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Emotional",
                            NameTrxCode = "feeling_name_emotional",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1c63cd6b-ad66-48e6-ac56-7375d67530ad"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "confident",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Confident",
                            NameTrxCode = "feeling_name_confident",
                            ShortCode = "",
                            UnicodeIcon = "😏"
                        },
                        new
                        {
                            FeelingId = new Guid("ddb860e2-53f9-4aa6-81a9-c1b8a1a99dc8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awesome",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awesome",
                            NameTrxCode = "feeling_name_awesome",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("03ef74d9-e021-475c-89ef-c9b4f7f004f4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fresh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fresh",
                            NameTrxCode = "feeling_name_fresh",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("93a859fb-cab1-43c0-8c75-da1078f080a0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "determined",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Determined",
                            NameTrxCode = "feeling_name_determined",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ac9e8d4a-8050-4643-93af-fe28183167f4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "exhausted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Exhausted",
                            NameTrxCode = "feeling_name_exhausted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c0767b3c-e7e5-41dc-93ab-d2799f354ef4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "glad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Glad",
                            NameTrxCode = "feeling_name_glad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e1e32fa1-5279-462f-b4df-4813f40f0ef4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lucky",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lucky",
                            NameTrxCode = "feeling_name_lucky",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("26ec0693-27f2-4426-a85d-9b3642c05075"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "heartbroken",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Heartbroken",
                            NameTrxCode = "feeling_name_heartbroken",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("440d89d7-958d-4582-9f8b-3837e972d220"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "bored",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Bored",
                            NameTrxCode = "feeling_name_bored",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("578b3a07-c389-43b5-ad72-d70ce890dd2d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sleepy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sleepy",
                            NameTrxCode = "feeling_name_sleepy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b8505c9f-8987-49b1-b66e-b984250dc355"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "energised",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Energised",
                            NameTrxCode = "feeling_name_energised",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2f5a1ea4-9ae6-4f8a-a8c7-52f87f51a3b2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hungry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hungry",
                            NameTrxCode = "feeling_name_hungry",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("57bd8d46-f6cb-4163-965e-75fa0c5c9e1c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "professional",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Professional",
                            NameTrxCode = "feeling_name_professional",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("06bd82d6-70cb-4d6c-a103-a44ac57aa61a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pained",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pained",
                            NameTrxCode = "feeling_name_pained",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b4cb861a-a80e-4ee9-811c-c4b1763d7eaf"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "peaceful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Peaceful",
                            NameTrxCode = "feeling_name_peaceful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5f968482-5d2c-46e2-a93a-484ab88ab22a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "disappointed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Disappointed",
                            NameTrxCode = "feeling_name_disappointed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("22f963b5-8ea5-4bca-84a1-904cbe4ff994"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "optimistic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Optimistic",
                            NameTrxCode = "feeling_name_optimistic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("65659c52-d573-4c64-8f81-6c8ac5b69450"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cold",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cold",
                            NameTrxCode = "feeling_name_cold",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b2e00181-5d43-4d64-a99e-571d4fbfeb64"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cute",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cute",
                            NameTrxCode = "feeling_name_cute",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b219d1d5-3a85-44f4-a116-6a9ade36225b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fabulous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fabulous",
                            NameTrxCode = "feeling_name_fabulous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("335a2a68-d1d1-4ca9-a65f-47e0b3582427"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "great",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Great",
                            NameTrxCode = "feeling_name_great",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("218b2029-6b09-42aa-bec6-f3ace20d56f4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sorry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sorry",
                            NameTrxCode = "feeling_name_sorry",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f3cdf596-2cd7-474f-89d7-3fd3cd45ea3a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "super",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Super",
                            NameTrxCode = "feeling_name_super",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("05e6251e-3d8d-4bf9-970b-79eae8bc4461"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worried",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worried",
                            NameTrxCode = "feeling_name_worried",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("904f0c27-ef8b-4f35-9e65-8fb2aa9f856e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "funny",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Funny",
                            NameTrxCode = "feeling_name_funny",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("89f5363e-f573-4f15-924a-07bd405ebc87"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "bad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Bad",
                            NameTrxCode = "feeling_name_bad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9e84f0bc-3172-492c-8597-5b2992c5a43d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "down",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Down",
                            NameTrxCode = "feeling_name_down",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("18c36d1f-ed9c-41db-9787-2af6c5fa501d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "inspired",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Inspired",
                            NameTrxCode = "feeling_name_inspired",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("999c5f6c-1b96-4b1f-a50f-dcd36759f43e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "satisfied",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Satisfied",
                            NameTrxCode = "feeling_name_satisfied",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("153d5685-1c67-43f0-8334-29be30e0acbc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pumped",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pumped",
                            NameTrxCode = "feeling_name_pumped",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("827516ea-ec8c-4af3-87a8-b10e2b7d696e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "calm",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Calm",
                            NameTrxCode = "feeling_name_calm",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0bd3ef90-6e0f-4106-95ba-12fa6f46b63d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "confused",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Confused",
                            NameTrxCode = "feeling_name_confused",
                            ShortCode = "",
                            UnicodeIcon = "😕"
                        },
                        new
                        {
                            FeelingId = new Guid("df503405-0257-4905-a888-1edec25eae86"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "goofy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Goofy",
                            NameTrxCode = "feeling_name_goofy",
                            ShortCode = "",
                            UnicodeIcon = "🤪"
                        },
                        new
                        {
                            FeelingId = new Guid("28a34843-cbba-46a8-ae4c-2bef99e9eb56"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "missing",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Missing",
                            NameTrxCode = "feeling_name_missing",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5f4137fd-ac27-4bd4-96ae-3d877727a14a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "good",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Good",
                            NameTrxCode = "feeling_name_good",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("95c4d305-4add-4b1d-a2a2-01f4779b0a67"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sarcastic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sarcastic",
                            NameTrxCode = "feeling_name_sarcastic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0fdef304-c896-4e5a-b5a7-be357f1c9e4d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lonely",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lonely",
                            NameTrxCode = "feeling_name_lonely",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("faee5dfb-98c2-4cee-b48f-f9cdca25aa61"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "strong",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Strong",
                            NameTrxCode = "feeling_name_strong",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("55177ed5-d786-43bd-985a-bdf3a4ef9e1a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "concerned",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Concerned",
                            NameTrxCode = "feeling_name_concerned",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0f2044d8-18af-47a4-ba57-6765021e8462"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "special",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Special",
                            NameTrxCode = "feeling_name_special",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d68027c7-a395-4f9b-9b49-f793c4fdbbaa"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "depressed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Depressed",
                            NameTrxCode = "feeling_name_depressed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("da2aa7bc-ef88-4cee-9a9d-08c563a2a54e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "jolly",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Jolly",
                            NameTrxCode = "feeling_name_jolly",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("22a50d2e-50c7-4b47-b6f1-6b7f82d1ccec"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "curious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Curious",
                            NameTrxCode = "feeling_name_curious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f3f4e6a5-df63-4feb-b4e0-065e2a813f06"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "low",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Low",
                            NameTrxCode = "feeling_name_low",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c2d3ddb1-6679-4fcb-9161-6823f6c4a61d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "welcome",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Welcome",
                            NameTrxCode = "feeling_name_welcome",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8da7019a-8a86-4fba-9908-90eb286487a8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "broken",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Broken",
                            NameTrxCode = "feeling_name_broken",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("aeadebb1-23a1-42e6-9a5b-792c60581a08"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "beautiful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Beautiful",
                            NameTrxCode = "feeling_name_beautiful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f9f38e41-b18a-4be6-88bd-b0a5afc0393b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amazing",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amazing",
                            NameTrxCode = "feeling_name_amazing",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("384a28ef-5fde-4f36-ae9f-4ab825bf59f8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "irritated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Irritated",
                            NameTrxCode = "feeling_name_irritated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8aea6d7c-6227-47ba-827c-657aa4a66d4c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stressed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stressed",
                            NameTrxCode = "feeling_name_stressed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("28d3523c-5250-41da-8815-e9928cd36859"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "incomplete",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Incomplete",
                            NameTrxCode = "feeling_name_incomplete",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("faaa4f95-376a-4e7e-9dc9-82db602b7686"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hyper",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hyper",
                            NameTrxCode = "feeling_name_hyper",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6ad56410-b191-4784-b03d-b6fd59f1d68b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mischievous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mischievous",
                            NameTrxCode = "feeling_name_mischievous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("69a92e69-8ee4-47f7-8c40-551bf1246e7a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amazed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amazed",
                            NameTrxCode = "feeling_name_amazed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("44b5a352-75f3-4caa-83cd-a0f699424b87"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "annoyed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Annoyed",
                            NameTrxCode = "feeling_name_annoyed",
                            ShortCode = "",
                            UnicodeIcon = "😒"
                        },
                        new
                        {
                            FeelingId = new Guid("2c4f7bf9-8cdb-434f-8b7d-24039a136867"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fed",
                            NameTrxCode = "feeling_name_fed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4944b0d1-afb2-489f-89c6-8e6f62c0349f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "puzzled",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Puzzled",
                            NameTrxCode = "feeling_name_puzzled",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("74ab9d8c-4738-401f-b6a2-7bb125d5e185"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "furious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Furious",
                            NameTrxCode = "feeling_name_furious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c7f32ca7-d477-41a0-bdf1-d8562c98a5d7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "refreshed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Refreshed",
                            NameTrxCode = "feeling_name_refreshed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ec12d9f3-d753-4520-a7a1-e8e16df5fcf4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "accomplished",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Accomplished",
                            NameTrxCode = "feeling_name_accomplished",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1b8b8493-b84b-4632-a981-7b69c786b3a8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "surprised",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Surprised",
                            NameTrxCode = "feeling_name_surprised",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("460177f5-01f0-4d67-b85f-ed1f67a94681"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "perplexed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Perplexed",
                            NameTrxCode = "feeling_name_perplexed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7271c867-1dd7-4aeb-b160-fd7c10e0cf01"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "frustrated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Frustrated",
                            NameTrxCode = "feeling_name_frustrated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("050bbf30-50e9-433d-9fd9-f3d7cf623ca5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "meh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Meh",
                            NameTrxCode = "feeling_name_meh",
                            ShortCode = "",
                            UnicodeIcon = "😐️"
                        },
                        new
                        {
                            FeelingId = new Guid("fbcb33e0-6757-43f9-9976-ee9b44ffcf92"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pretty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pretty",
                            NameTrxCode = "feeling_name_pretty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("270436e2-e627-41cd-8f3d-73536ee4cf96"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "better",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Better",
                            NameTrxCode = "feeling_name_better",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("86010d9e-ce15-4039-acfe-009cb58fb4d8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "guilty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Guilty",
                            NameTrxCode = "feeling_name_guilty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("83da0c76-eeb6-40f2-8c58-778be5cb4235"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "safe",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Safe",
                            NameTrxCode = "feeling_name_safe",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("faf01471-a72a-46fa-9571-2fdeb3da233a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "free",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Free",
                            NameTrxCode = "feeling_name_free",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("08fec8c0-9a9a-4da8-b188-42057a28737c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lost",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lost",
                            NameTrxCode = "feeling_name_lost",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3390a1ae-3dee-4063-80fd-efcac7e499ca"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "old",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Old",
                            NameTrxCode = "feeling_name_old",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c3d83de5-3da1-4e95-a0bd-48dac2fc30b1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lazy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lazy",
                            NameTrxCode = "feeling_name_lazy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a417806d-f882-43ef-81f1-672c5598fc44"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worse",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worse",
                            NameTrxCode = "feeling_name_worse",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b763bf31-a64b-4557-8dc2-5b0e876343f3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "horrible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Horrible",
                            NameTrxCode = "feeling_name_horrible",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9799f8e5-623e-41bf-9375-7773326b6a06"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "comfortable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Comfortable",
                            NameTrxCode = "feeling_name_comfortable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1e8378d8-ff8b-40dc-bbd6-c6fe7e2de38e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stupid",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stupid",
                            NameTrxCode = "feeling_name_stupid",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("efe76191-cebd-4336-b9cc-49ce940db398"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ashamed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ashamed",
                            NameTrxCode = "feeling_name_ashamed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("585a1e35-04a6-46e6-ae8a-98231d9911fc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "terrible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Terrible",
                            NameTrxCode = "feeling_name_terrible",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1ffb7b21-31c9-461e-b346-55fbb129455d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "asleep",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Asleep",
                            NameTrxCode = "feeling_name_asleep",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("56c9ae5c-9667-4619-8628-9ba840aaffdd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "well",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Well",
                            NameTrxCode = "feeling_name_well",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("26a68a19-a49b-40b9-a97f-e72fd0590074"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "alive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Alive",
                            NameTrxCode = "feeling_name_alive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6bcd8bd3-22f2-468c-8075-fa9275c44668"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "shy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Shy",
                            NameTrxCode = "feeling_name_shy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ff1601e4-8de1-45f8-ae04-b0c4dc0bba96"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rough",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rough",
                            NameTrxCode = "feeling_name_rough",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8c60adde-267e-474c-a80b-bcc441ce3886"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "weird",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Weird",
                            NameTrxCode = "feeling_name_weird",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("93af3bfe-d27d-4b03-8013-70a01a53354f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "human",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Human",
                            NameTrxCode = "feeling_name_human",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("90976c98-a7a7-4ec4-b847-8f3d2936edbc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hurt",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hurt",
                            NameTrxCode = "feeling_name_hurt",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("595a4121-6a28-44ae-aadd-02ae648940b4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awful",
                            NameTrxCode = "feeling_name_awful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("72adea12-01ca-4f73-9ce5-01f8d157a2ce"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "normal",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Normal",
                            NameTrxCode = "feeling_name_normal",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3a97b86a-a168-4b8d-a86a-3b079d810b6c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "warm",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Warm",
                            NameTrxCode = "feeling_name_warm",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("cc7067fc-fee9-4dbf-b138-bbac435a298d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "insecure",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Insecure",
                            NameTrxCode = "feeling_name_insecure",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("708de8d5-b25e-428e-9b9f-0e6d61ae989c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "weak",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Weak",
                            NameTrxCode = "feeling_name_weak",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("eedb9d98-b069-4c0f-9074-5c8d459586dd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "kind",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Kind",
                            NameTrxCode = "feeling_name_kind",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("dd98e8fe-55f8-4565-b1d6-cd6c048ee9c8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fine",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fine",
                            NameTrxCode = "feeling_name_fine",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b2dd43f3-ab0a-4840-bab8-91470e0e2b10"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dumb",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dumb",
                            NameTrxCode = "feeling_name_dumb",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("706bfd84-e536-490f-a9e7-e628ba6743d2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nice",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nice",
                            NameTrxCode = "feeling_name_nice",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("95d71cab-e013-485a-9860-b686f004c517"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "important",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Important",
                            NameTrxCode = "feeling_name_important",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("dba5de44-50ae-4b7e-9e7f-e282822e0bae"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "crappy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Crappy",
                            NameTrxCode = "feeling_name_crappy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("33f7242c-bf82-4a2a-a130-62d08677b72d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "uncomfortable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Uncomfortable",
                            NameTrxCode = "feeling_name_uncomfortable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("02b09a95-9977-4c59-8b5f-16f2a3578d5d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worthless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worthless",
                            NameTrxCode = "feeling_name_worthless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b2472ad3-18c3-4b07-9be7-3822dc456886"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ready",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ready",
                            NameTrxCode = "feeling_name_ready",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7a2ee9b5-40dc-46f9-9552-cc6c35f3349c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "different",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Different",
                            NameTrxCode = "feeling_name_different",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3501d61d-e805-4989-9b9c-d3342b6a0408"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "helpless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Helpless",
                            NameTrxCode = "feeling_name_helpless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9f99aca8-9d14-4652-835a-982255372362"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awkward",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awkward",
                            NameTrxCode = "feeling_name_awkward",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4263e637-4ac1-4caa-88ab-e260268bedc9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "drunk",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Drunk",
                            NameTrxCode = "feeling_name_drunk",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5930aaeb-dc5a-4ff7-9f0f-f9669946e300"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "overwhelmed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Overwhelmed",
                            NameTrxCode = "feeling_name_overwhelmed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("00d2f287-ab97-4098-a245-4358f50b7a70"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hopeless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hopeless",
                            NameTrxCode = "feeling_name_hopeless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4a686032-3481-4cf7-8627-6eec5d52f3a8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "whole",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Whole",
                            NameTrxCode = "feeling_name_whole",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("abebb644-4922-4b7b-9836-69234b0634a5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "miserable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Miserable",
                            NameTrxCode = "feeling_name_miserable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9c0d741d-57c3-4d9f-bd50-b86e94fe15ab"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mad",
                            NameTrxCode = "feeling_name_mad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7cfc562c-b740-4ceb-891e-a4319d705af2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "deep",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Deep",
                            NameTrxCode = "feeling_name_deep",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d3e6250b-42e2-4d98-ab47-a46c1ebc4793"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "yucky",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Yucky",
                            NameTrxCode = "feeling_name_yucky",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6b569555-8b89-41f9-83c4-fd39bd460c86"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nervous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nervous",
                            NameTrxCode = "feeling_name_nervous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("baf4c2dd-79c6-4351-8dd1-c13b371717db"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blue",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blue",
                            NameTrxCode = "feeling_name_blue",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e8758ffc-4ccd-4090-ad14-729960cd3e64"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wanted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wanted",
                            NameTrxCode = "feeling_name_wanted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c37604b0-2d46-4571-b834-c1950ce1f5b0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "honoured",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Honoured",
                            NameTrxCode = "feeling_name_honoured",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("03b89565-6162-4aff-8bfe-ff3cae476146"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "light",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Light",
                            NameTrxCode = "feeling_name_light",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d4587632-ec56-45c9-b956-5e47791a14dc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hung-over",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hung-Over",
                            NameTrxCode = "feeling_name_hung-over",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9f29296c-9a87-4785-a6b8-2c0247ff1c10"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "secure",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Secure",
                            NameTrxCode = "feeling_name_secure",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d0def7ca-0b61-4cd4-b859-2db6009afb45"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "naked",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Naked",
                            NameTrxCode = "feeling_name_naked",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("048bbf43-4557-4f66-815d-38aa2cc22fca"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dirty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dirty",
                            NameTrxCode = "feeling_name_dirty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("07c08b8c-4028-4e4c-8e0b-5b137cafd7cc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unimportant",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unimportant",
                            NameTrxCode = "feeling_name_unimportant",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c05c6d20-dbf0-489c-9286-9445f7cae544"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mighty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mighty",
                            NameTrxCode = "feeling_name_mighty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5a49b400-5588-4a04-8402-b1eb69577359"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "scared",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Scared",
                            NameTrxCode = "feeling_name_scared",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("576dbd06-aac9-4bc0-8f87-7d271dc0dc17"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "jealous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Jealous",
                            NameTrxCode = "feeling_name_jealous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3a4e7d81-7b6e-4e01-82e5-7a7a3af59766"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sore",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sore",
                            NameTrxCode = "feeling_name_sore",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0a12a363-6426-4bfe-a852-249c4d262694"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unwanted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unwanted",
                            NameTrxCode = "feeling_name_unwanted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e35aad43-1311-4dcb-a8ca-5cdbd14217b1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "appreciated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Appreciated",
                            NameTrxCode = "feeling_name_appreciated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8536b7a4-b0de-4153-b3ae-5fe07af16c6c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "full",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Full",
                            NameTrxCode = "feeling_name_full",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("27bde456-b0b4-40c7-91b3-0c95575aa3b3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "busy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Busy",
                            NameTrxCode = "feeling_name_busy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c0d3ab21-c695-4994-b55b-8991c65b6810"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "small",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Small",
                            NameTrxCode = "feeling_name_small",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d322212f-92e4-48ae-801a-729594dee7e8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unloved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unloved",
                            NameTrxCode = "feeling_name_unloved",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("315ef1cf-2337-48fe-9d44-57c8827b6f7e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "useless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Useless",
                            NameTrxCode = "feeling_name_useless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("fd6977cf-29e2-4641-9823-194a5517b0cc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "qualified",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Qualified",
                            NameTrxCode = "feeling_name_qualified",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f0bafebb-92e4-44bd-833e-26d8e682b7a3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blah",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blah",
                            NameTrxCode = "feeling_name_blah",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9f42d697-80b4-4702-88ba-87068bb03759"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "impatient",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Impatient",
                            NameTrxCode = "feeling_name_impatient",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e61456f9-1adf-4608-a1aa-0dfee2bd6e2a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "privileged",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Privileged",
                            NameTrxCode = "feeling_name_privileged",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0c771f97-b58a-48a4-b4ee-a3882ed0a50b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "trapped",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Trapped",
                            NameTrxCode = "feeling_name_trapped",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d7e7e66a-3d69-4642-92f0-e6803650e198"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thirsty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thirsty",
                            NameTrxCode = "feeling_name_thirsty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9fc37ea4-289b-4a96-a551-b471b79a1d8c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nauseous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nauseous",
                            NameTrxCode = "feeling_name_nauseous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4a753049-de9a-4438-be80-affc3e503591"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "upset",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Upset",
                            NameTrxCode = "feeling_name_upset",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3388abad-a1fa-4a13-96fd-91b42e56657c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "offended",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Offended",
                            NameTrxCode = "feeling_name_offended",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("05735e2e-333e-4b66-a07b-f17f71a40451"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "numb",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Numb",
                            NameTrxCode = "feeling_name_numb",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("55402e6e-8f1d-4151-a2e8-9e827d8cd79d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "perfect",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Perfect",
                            NameTrxCode = "feeling_name_perfect",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("320d759f-401b-425d-9d88-96a92a5f0576"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "challenged",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Challenged",
                            NameTrxCode = "feeling_name_challenged",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0d9f1b8e-2285-423f-b797-fbd0f5ca1202"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "threatened",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Threatened",
                            NameTrxCode = "feeling_name_threatened",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7d77f738-d127-4265-a4a4-927e268a9705"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "relieved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Relieved",
                            NameTrxCode = "feeling_name_relieved",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5113b846-d48e-4880-93c9-a5cb4c6cda73"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stuck",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stuck",
                            NameTrxCode = "feeling_name_stuck",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d4d09f72-4f40-4032-9e8c-030efdfcf9ea"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "strange",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Strange",
                            NameTrxCode = "feeling_name_strange",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6db6bbb6-c95b-441d-8fa8-361b8b994505"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "embarrassed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Embarrassed",
                            NameTrxCode = "feeling_name_embarrassed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2f927daf-37f5-4f61-8222-c8536ffdde02"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rested",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rested",
                            NameTrxCode = "feeling_name_rested",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a59c0368-690d-40be-8c77-db5e8a4d4f01"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "smart",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Smart",
                            NameTrxCode = "feeling_name_smart",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("86cf8ef0-2563-4619-96b0-ef949b9dd1e5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cheated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cheated",
                            NameTrxCode = "feeling_name_cheated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("206fa4c0-8a0f-40aa-abbc-364db3134d44"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "betrayed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Betrayed",
                            NameTrxCode = "feeling_name_betrayed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("03fea5b9-a45b-41df-9d9b-be2581fa1eb1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "anxious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Anxious",
                            NameTrxCode = "feeling_name_anxious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5cf164e8-e41e-4e5c-a679-30de1c7b97f7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "aggravated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Aggravated",
                            NameTrxCode = "feeling_name_aggravated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("94d8c8a0-2a4b-48d1-987c-da994e082e02"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "evil",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Evil",
                            NameTrxCode = "feeling_name_evil",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7dde0886-b3c7-464d-8e65-561ccfc6829c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ignored",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ignored",
                            NameTrxCode = "feeling_name_ignored",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ad7db79b-98d2-408e-801e-62e254c40d17"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "regret",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Regret",
                            NameTrxCode = "feeling_name_regret",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("26c6a1ef-cf57-43a6-9479-f874ebf8c690"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "healthy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Healthy",
                            NameTrxCode = "feeling_name_healthy",
                            ShortCode = "",
                            UnicodeIcon = "😊"
                        },
                        new
                        {
                            FeelingId = new Guid("47d81d07-240b-423a-8622-4dc3a45f42d9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "generous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Generous",
                            NameTrxCode = "feeling_name_generous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("161317b6-8ccc-4d5f-a58c-5f46db9229b3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rich",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rich",
                            NameTrxCode = "feeling_name_rich",
                            ShortCode = "",
                            UnicodeIcon = "🤑"
                        },
                        new
                        {
                            FeelingId = new Guid("886b77be-5642-4fe1-8fe8-c4d80a3dd1ec"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "afraid",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Afraid",
                            NameTrxCode = "feeling_name_afraid",
                            ShortCode = "",
                            UnicodeIcon = "😨"
                        },
                        new
                        {
                            FeelingId = new Guid("caa77cbb-1b15-447b-bf3a-0aca46b05aec"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "broke",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Broke",
                            NameTrxCode = "feeling_name_broke",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("befaba8e-ca6b-4c94-95a2-2956a942fe2b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "invisible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(9889), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Invisible",
                            NameTrxCode = "feeling_name_invisible",
                            ShortCode = "",
                            UnicodeIcon = "🫥"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<int>("Direction")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(5);

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.HasIndex("ThreeLetterCode")
                        .IsUnique();

                    b.HasIndex("TwoLetterCode")
                        .IsUnique();

                    b.ToTable("Languages", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d84b8d2-78c5-44d6-846a-37011c96d882"),
                            Code = "EN",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "English",
                            NameTrxCode = "language_name_en",
                            ThreeLetterCode = "ENG",
                            TwoLetterCode = "EN"
                        },
                        new
                        {
                            Id = new Guid("e5131f8f-3aab-4777-b596-5f09ba78fe5c"),
                            Code = "AF",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Afrikaans",
                            NameTrxCode = "language_name_af",
                            ThreeLetterCode = "AFR",
                            TwoLetterCode = "AF"
                        },
                        new
                        {
                            Id = new Guid("f39f6192-e57a-4f3c-927e-e1b15e767092"),
                            Code = "FR",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "French",
                            NameTrxCode = "language_name_fr",
                            ThreeLetterCode = "FRA",
                            TwoLetterCode = "FR"
                        },
                        new
                        {
                            Id = new Guid("e5e6a724-6211-46ec-b4a6-22d5e0dc5c05"),
                            Code = "ZH",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Chinese",
                            NameTrxCode = "language_name_zh",
                            ThreeLetterCode = "ZHO",
                            TwoLetterCode = "ZH"
                        },
                        new
                        {
                            Id = new Guid("f83b81e2-8842-435d-96f3-2eb1d972683b"),
                            Code = "HE",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 1,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hebrew",
                            NameTrxCode = "language_name_he",
                            ThreeLetterCode = "HEB",
                            TwoLetterCode = "HE"
                        },
                        new
                        {
                            Id = new Guid("fee97600-21fa-4999-bb04-d1c606e932a3"),
                            Code = "HI",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hindi",
                            NameTrxCode = "language_name_hi",
                            ThreeLetterCode = "HIN",
                            TwoLetterCode = "HI"
                        },
                        new
                        {
                            Id = new Guid("eec1fb7d-dbf5-46c6-8985-ce06a2c72fd1"),
                            Code = "RU",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Russian",
                            NameTrxCode = "language_name_ru",
                            ThreeLetterCode = "RUS",
                            TwoLetterCode = "RU"
                        },
                        new
                        {
                            Id = new Guid("ffd9de89-5d95-4314-ba2a-e559249da760"),
                            Code = "ES",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Spanish",
                            NameTrxCode = "language_name_es",
                            ThreeLetterCode = "ESP",
                            TwoLetterCode = "ES"
                        },
                        new
                        {
                            Id = new Guid("a4fc20e2-5b54-4b2b-906d-68ec6f5ee8e2"),
                            Code = "ZU",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(6861), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Zulu",
                            NameTrxCode = "language_name_zu",
                            ThreeLetterCode = "ZUL",
                            TwoLetterCode = "ZU"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.PhoneNumberType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("PhoneNumberTypes", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("UnicodeIcon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.ToTable("Reactions", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fbcdb29c-7ccf-46d0-9e96-6522b3a68ebb"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "like",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Like",
                            NameTrxCode = "reaction_name_like",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("869a144b-afad-4f08-b38b-5d90a6f56d0d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dislike",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dislike",
                            NameTrxCode = "reaction_name_dislike",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("f5449fe3-5d29-4143-b6f7-2961348be76b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "love",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Love",
                            NameTrxCode = "reaction_name_love",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("2cc34cba-23e0-4bac-b6e2-8ec4aba7cb08"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "care",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Care",
                            NameTrxCode = "reaction_name_care",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("4e6d2acb-35e5-441b-ade4-bd23c38a7a61"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wow",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wow",
                            NameTrxCode = "reaction_name_wow",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("508ec59f-5151-4b95-8e5a-9b2b6dbd194e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "laugh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Haha",
                            NameTrxCode = "reaction_name_laugh",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("2182203e-f049-44ed-ac2a-9934c2019cbc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "angry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Angry",
                            NameTrxCode = "reaction_name_angry",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("b278e42d-dc64-477c-8edf-ad4e51d9b7bd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(8862), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sad",
                            NameTrxCode = "reaction_name_sad",
                            UnicodeIcon = "1"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<int>("DataType")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(5);

                    b.Property<string>("HelpText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("SettingCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("SettingCategoryId");

                    b.ToTable("Settings", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e2ea54c-7c8d-4a5b-a596-a7da01b79705"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "AU",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Regional Format",
                            ShortDescription = "Formats for dates, times and numbers."
                        },
                        new
                        {
                            Id = new Guid("c914ae6f-bc60-4d5b-994e-a26144e5d4f4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "EN",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Language Code",
                            ShortDescription = "The language code of the Astrana instance user."
                        },
                        new
                        {
                            Id = new Guid("c8757534-2242-42ee-b3db-81f6496ecfe0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "AUS Eastern Standard Time",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Time Zone",
                            ShortDescription = "The time zone of the Astrana instance user."
                        },
                        new
                        {
                            Id = new Guid("27229770-784d-4458-8315-e0ed272e3be5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "localhost",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Host Name",
                            ShortDescription = "The address of the Astrana instance."
                        },
                        new
                        {
                            Id = new Guid("af1042a5-551f-4715-a133-98d6981dddd4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Host Port Number",
                            ShortDescription = "The host port number of the Astrana instance."
                        },
                        new
                        {
                            Id = new Guid("592ec9f1-eec9-4d00-93dd-0ddaff0777c3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Idp Issuer Signing Key Secret",
                            ShortDescription = "The secret used for generating the Idp Issuer Signing Key for the Astrana instance.",
                            Value = "69473DFCE4E2D15A343495F3612FBD2C69473DFCE4E2D15A343495F3612FBD2C"
                        },
                        new
                        {
                            Id = new Guid("3ceb67a5-63dd-490a-928d-f064150a91e3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 21,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Default Skin Tone",
                            ShortDescription = "The secret used for generating the Idp Issuer Signing Key for the Astrana instance.",
                            Value = "69473DFCE4E2D15A343495F3612FBD2C69473DFCE4E2D15A343495F3612FBD2C"
                        },
                        new
                        {
                            Id = new Guid("ad167fdc-8fc7-48af-bca2-7218295aa6fa"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 1,
                            DefaultValue = "0",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 10, 0, 23, 29, 34, DateTimeKind.Unspecified).AddTicks(4507), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Multi-factor Authentication",
                            ShortDescription = "Turn multi-factor authentication on/off."
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("SettingCategories", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.ToTable("EmailAddresses", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("InstantMessengerUsernames", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.ToTable("PhoneNumbers", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Audio", b =>
                {
                    b.Property<Guid>("AudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("AudioId");

                    b.ToTable("Audios", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Comment", b =>
                {
                    b.Property<Guid>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("TargeCommentCommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TargetAudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("TargetCommentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("TargetContentCollectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("TargetGifId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("TargetImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("TargetLinkId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<long?>("TargetPostId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("TargetVideoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("CommentId");

                    b.HasIndex("TargeCommentCommentId");

                    b.HasIndex("TargetAudioId");

                    b.HasIndex("TargetContentCollectionId");

                    b.HasIndex("TargetGifId");

                    b.HasIndex("TargetImageId");

                    b.HasIndex("TargetLinkId");

                    b.HasIndex("TargetPostId");

                    b.HasIndex("TargetVideoId");

                    b.ToTable("Comments", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollection", b =>
                {
                    b.Property<Guid>("ContentCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(1);

                    b.HasKey("ContentCollectionId");

                    b.ToTable("ContentCollections", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollectionItem", b =>
                {
                    b.Property<Guid>("ContentCollectionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.Property<Guid>("ContentCollectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("GifId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("LinkId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<int>("MediaType")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.HasKey("ContentCollectionItemId");

                    b.HasIndex("AudioId");

                    b.HasIndex("ContentCollectionId");

                    b.HasIndex("GifId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LinkId");

                    b.HasIndex("VideoId");

                    b.ToTable("ContentCollectionItems", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentSafetyRating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("ContentSafetyRatings", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ExternalContentSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CharSet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("PreviewImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<string>("Robots")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("PreviewImageId");

                    b.ToTable("ExternalContentSubscriptions", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)")
                        .HasColumnOrder(1);

                    b.HasKey("ImageId");

                    b.ToTable("Images", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Link", b =>
                {
                    b.Property<Guid>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CharSet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("PreviewImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<string>("Robots")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(1);

                    b.HasKey("LinkId");

                    b.HasIndex("PreviewImageId");

                    b.ToTable("Links", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Location", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("LocationId");

                    b.ToTable("Locations", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Post", b =>
                {
                    b.Property<long>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PostId"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Text")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("PostId");

                    b.ToTable("Posts", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.PostAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.Property<string>("Caption")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("ContentCollectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("FeelingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(11);

                    b.Property<Guid?>("GifId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("LinkId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(10);

                    b.Property<long?>("PostId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(1);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("AudioId");

                    b.HasIndex("ContentCollectionId");

                    b.HasIndex("FeelingId");

                    b.HasIndex("GifId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LinkId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PostId");

                    b.HasIndex("VideoId");

                    b.ToTable("PostAttachments", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.ToTable("Tags", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Video", b =>
                {
                    b.Property<Guid>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("VideoId");

                    b.ToTable("Videos", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(10);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(20);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(4);

                    b.Property<short>("FailedAccessCount")
                        .HasColumnType("smallint")
                        .HasColumnOrder(17);

                    b.Property<bool>("IsEmailAddressConfirmed")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsLockoutEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(16);

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("bit")
                        .HasColumnOrder(13);

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(14);

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(19);

                    b.Property<DateTimeOffset>("LastLoginTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(21);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(15);

                    b.Property<string>("NormalizedEmailAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(8);

                    b.Property<string>("PhoneCountryCodeISO")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(11);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(12);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(9);

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(18);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("UserAccounts", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccountRoleRel", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "UserRoleId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserAccountRoleRel", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.Peer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AudienceId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsMuted")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.HasIndex("AudienceId1");

                    b.ToTable("Peers", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.PeerConnectionRequestReceived", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerPreviewAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("PeerConnectionRequestsReceived", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.PeerConnectionRequestSubmitted", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerPreviewAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("PeerConnectionRequestsSubmitted", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserEmailAddressRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("EmailAddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "EmailAddressId");

                    b.HasIndex("EmailAddressId");

                    b.ToTable("UserEmailAddressRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserMessengerUsernameRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("MessengerUsernameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "MessengerUsernameId");

                    b.HasIndex("MessengerUsernameId");

                    b.ToTable("MessengerUsernameRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserPhoneNumberRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PhoneNumberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "PhoneNumberId");

                    b.HasIndex("PhoneNumberId");

                    b.ToTable("UserPhoneNumberRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("CoverPictureImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoverPicturesCollectionContentCollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(6);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<string>("Introduction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("MiddleNames")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("ProfilePictureImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfilePicturesCollectionContentCollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("CoverPictureImageId");

                    b.HasIndex("CoverPicturesCollectionContentCollectionId");

                    b.HasIndex("ProfilePictureImageId");

                    b.HasIndex("ProfilePicturesCollectionContentCollectionId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserProfiles", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<short?>("DisplayOrder")
                        .HasColumnType("smallint")
                        .HasColumnOrder(7);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<string>("Label")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileDetails", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.User.UserProfileDetail", null)
                        .WithMany("Audiences")
                        .HasForeignKey("UserProfileDetailId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Country", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("Countries")
                        .HasForeignKey("AudienceId");

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Language", null)
                        .WithMany("Countries")
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSetting", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", "SettingCategory")
                        .WithMany("Settings")
                        .HasForeignKey("SettingCategoryId");

                    b.Navigation("SettingCategory");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Comment", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Comment", "TargeComment")
                        .WithMany()
                        .HasForeignKey("TargeCommentCommentId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "TargetAudio")
                        .WithMany()
                        .HasForeignKey("TargetAudioId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "TargetContentCollection")
                        .WithMany()
                        .HasForeignKey("TargetContentCollectionId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "TargetGif")
                        .WithMany()
                        .HasForeignKey("TargetGifId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "TargetImage")
                        .WithMany()
                        .HasForeignKey("TargetImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "TargetLink")
                        .WithMany()
                        .HasForeignKey("TargetLinkId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Post", "TargetPost")
                        .WithMany()
                        .HasForeignKey("TargetPostId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Video", "TargetVideo")
                        .WithMany()
                        .HasForeignKey("TargetVideoId");

                    b.Navigation("TargeComment");

                    b.Navigation("TargetAudio");

                    b.Navigation("TargetContentCollection");

                    b.Navigation("TargetGif");

                    b.Navigation("TargetImage");

                    b.Navigation("TargetLink");

                    b.Navigation("TargetPost");

                    b.Navigation("TargetVideo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollectionItem", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "ContentCollection")
                        .WithMany("ContentCollectionItems")
                        .HasForeignKey("ContentCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Gif")
                        .WithMany()
                        .HasForeignKey("GifId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Audio");

                    b.Navigation("ContentCollection");

                    b.Navigation("Gif");

                    b.Navigation("Image");

                    b.Navigation("Link");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ExternalContentSubscription", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "PreviewImage")
                        .WithMany()
                        .HasForeignKey("PreviewImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviewImage");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Link", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "PreviewImage")
                        .WithMany()
                        .HasForeignKey("PreviewImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviewImage");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.PostAttachment", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "ContentCollection")
                        .WithMany()
                        .HasForeignKey("ContentCollectionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Feeling", "Feeling")
                        .WithMany()
                        .HasForeignKey("FeelingId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Gif")
                        .WithMany()
                        .HasForeignKey("GifId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Post", null)
                        .WithMany("Attachments")
                        .HasForeignKey("PostId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Audio");

                    b.Navigation("ContentCollection");

                    b.Navigation("Feeling");

                    b.Navigation("Gif");

                    b.Navigation("Image");

                    b.Navigation("Link");

                    b.Navigation("Location");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Tag", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("Tags")
                        .HasForeignKey("AudienceId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccountRoleRel", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserRole", "UserRole")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.Peer", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("PeersExcluded")
                        .HasForeignKey("AudienceId");

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("PeersIncluded")
                        .HasForeignKey("AudienceId1");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserEmailAddressRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", "EmailAddress")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("EmailAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailAddress");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserMessengerUsernameRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", "MessengerUsername")
                        .WithMany("MessengerUsernames")
                        .HasForeignKey("MessengerUsernameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("MessengerUsernames")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessengerUsername");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserPhoneNumberRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", "PhoneNumber")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneNumber");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfile", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "CoverPicture")
                        .WithMany()
                        .HasForeignKey("CoverPictureImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "CoverPicturesCollection")
                        .WithMany()
                        .HasForeignKey("CoverPicturesCollectionContentCollectionId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "ProfilePicturesCollection")
                        .WithMany()
                        .HasForeignKey("ProfilePicturesCollectionContentCollectionId");

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoverPicture");

                    b.Navigation("CoverPicturesCollection");

                    b.Navigation("ProfilePicture");

                    b.Navigation("ProfilePicturesCollection");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.User.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("PeersExcluded");

                    b.Navigation("PeersIncluded");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Language", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", b =>
                {
                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", b =>
                {
                    b.Navigation("EmailAddresses");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", b =>
                {
                    b.Navigation("MessengerUsernames");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", b =>
                {
                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollection", b =>
                {
                    b.Navigation("ContentCollectionItems");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Post", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccount", b =>
                {
                    b.Navigation("EmailAddresses");

                    b.Navigation("MessengerUsernames");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("UserAccountRoles");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserRole", b =>
                {
                    b.Navigation("UserAccountRoles");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.Navigation("Audiences");
                });
#pragma warning restore 612, 618
        }
    }
}
