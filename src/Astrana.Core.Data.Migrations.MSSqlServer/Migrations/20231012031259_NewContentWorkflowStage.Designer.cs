// <auto-generated />
using System;
using Astrana.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Astrana.Core.Data.Migrations.MSSqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231012031259_NewContentWorkflowStage")]
    partial class NewContentWorkflowStage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Astrana.Core.Data.Entities.AccessManagement.ApiAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("ApiAccessTokens", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<short?>("MaximumAge")
                        .HasColumnType("smallint")
                        .HasColumnOrder(6);

                    b.Property<short?>("MinimumAge")
                        .HasColumnType("smallint")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("UserProfileDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserProfileDetailId");

                    b.ToTable("Audiences", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(4);

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.HasIndex("ThreeLetterCode")
                        .IsUnique();

                    b.HasIndex("TwoLetterCode")
                        .IsUnique();

                    b.ToTable("Countries", "config");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Australia",
                            NameTrxCode = "country_name_au",
                            ThreeLetterCode = "AUS",
                            TwoLetterCode = "AU"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Brazil",
                            NameTrxCode = "country_name_br",
                            ThreeLetterCode = "BRA",
                            TwoLetterCode = "BR"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "China",
                            NameTrxCode = "country_name_cn",
                            ThreeLetterCode = "CHN",
                            TwoLetterCode = "CN"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "France",
                            NameTrxCode = "country_name_fr",
                            ThreeLetterCode = "FRA",
                            TwoLetterCode = "FR"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "India",
                            NameTrxCode = "country_name_in",
                            ThreeLetterCode = "IND",
                            TwoLetterCode = "IN"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Israel",
                            NameTrxCode = "country_name_il",
                            ThreeLetterCode = "ILR",
                            TwoLetterCode = "IL"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Russia",
                            NameTrxCode = "country_name_ru",
                            ThreeLetterCode = "RUS",
                            TwoLetterCode = "RU"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "South Africa",
                            NameTrxCode = "country_name_za",
                            ThreeLetterCode = "ZAF",
                            TwoLetterCode = "ZA"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Spain",
                            NameTrxCode = "country_name_es",
                            ThreeLetterCode = "ESP",
                            TwoLetterCode = "ES"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "United Kingdom",
                            NameTrxCode = "country_name_gb",
                            ThreeLetterCode = "GBR",
                            TwoLetterCode = "GB"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "United States",
                            NameTrxCode = "country_name_us",
                            ThreeLetterCode = "USA",
                            TwoLetterCode = "US"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.FeatureToggle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<string>("FeatureDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsFeatureDisabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.HasIndex("FeatureName")
                        .IsUnique();

                    b.ToTable("FeatureToggles", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Feeling", b =>
                {
                    b.Property<Guid>("FeelingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(5);

                    b.Property<string>("UnicodeIcon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(4);

                    b.HasKey("FeelingId");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.ToTable("Feelings", "config");

                    b.HasData(
                        new
                        {
                            FeelingId = new Guid("02ccaacc-dcb9-419e-ada9-01de8b5298e3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "happy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Happy",
                            NameTrxCode = "feeling_name_happy",
                            ShortCode = "",
                            UnicodeIcon = "😀"
                        },
                        new
                        {
                            FeelingId = new Guid("5c7c9904-9d54-4afa-b8d1-5ca089abc42a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blessed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blessed",
                            NameTrxCode = "feeling_name_blessed",
                            ShortCode = "",
                            UnicodeIcon = "😇"
                        },
                        new
                        {
                            FeelingId = new Guid("92867e93-1ae9-43e4-9e57-11bf4e3f21fe"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "loved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Loved",
                            NameTrxCode = "feeling_name_loved",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            FeelingId = new Guid("c6ea7dcb-fe7a-4ee8-b53b-3e0227d95378"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sad",
                            NameTrxCode = "feeling_name_sad",
                            ShortCode = "",
                            UnicodeIcon = "🙁"
                        },
                        new
                        {
                            FeelingId = new Guid("69e14954-44e7-4391-bac4-8a6094355851"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lovely",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lovely",
                            NameTrxCode = "feeling_name_lovely",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            FeelingId = new Guid("827cc83c-5ff6-4225-b4e5-ea28df93ab43"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thankful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thankful",
                            NameTrxCode = "feeling_name_thankful",
                            ShortCode = "",
                            UnicodeIcon = "😄"
                        },
                        new
                        {
                            FeelingId = new Guid("fbc19ce1-4fea-462d-b3bf-1abcdc693e03"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "excited",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Excited",
                            NameTrxCode = "feeling_name_excited",
                            ShortCode = "",
                            UnicodeIcon = "🤩"
                        },
                        new
                        {
                            FeelingId = new Guid("544bb77a-4995-4daf-9ae1-9f8c8d8fbba6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "in love",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "In Love",
                            NameTrxCode = "feeling_name_in_love",
                            ShortCode = "",
                            UnicodeIcon = "🥰"
                        },
                        new
                        {
                            FeelingId = new Guid("5905fa10-e3d2-4e63-a742-d36ee3483382"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "crazy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Crazy",
                            NameTrxCode = "feeling_name_crazy",
                            ShortCode = "",
                            UnicodeIcon = "🤪"
                        },
                        new
                        {
                            FeelingId = new Guid("c62959c5-c34f-4eec-8a84-c64468632597"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "grateful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Grateful",
                            NameTrxCode = "feeling_name_grateful",
                            ShortCode = "",
                            UnicodeIcon = "😄"
                        },
                        new
                        {
                            FeelingId = new Guid("cf848d21-08f8-4485-9fa5-161696d18a1b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blissful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blissful",
                            NameTrxCode = "feeling_name_blissful",
                            ShortCode = "",
                            UnicodeIcon = "😊"
                        },
                        new
                        {
                            FeelingId = new Guid("72fec9b2-6efb-4fb4-8926-4b81d8974484"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fantastic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fantastic",
                            NameTrxCode = "feeling_name_fantastic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b7d7cb5f-3a27-4b7a-8646-df0dfa57309f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "silly",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Silly",
                            NameTrxCode = "feeling_name_silly",
                            ShortCode = "",
                            UnicodeIcon = "😜"
                        },
                        new
                        {
                            FeelingId = new Guid("e06e8a42-4d30-44bd-b106-1ef16ed32e9b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "festive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Festive",
                            NameTrxCode = "feeling_name_festive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("bdf7fed1-7f04-4105-98b7-93b8839dcc8b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wonderful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wonderful",
                            NameTrxCode = "feeling_name_wonderful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("cda22cb5-890c-4aec-81ae-c496842a5cbe"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cool",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cool",
                            NameTrxCode = "feeling_name_cool",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a7d20fbf-08da-44f9-9b13-a1d3d8a504c9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amused",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amused",
                            NameTrxCode = "feeling_name_amused",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("31b5a22f-29e1-469b-aa70-d9afe72a2798"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "relaxed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Relaxed",
                            NameTrxCode = "feeling_name_relaxed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("edcac03e-baf1-4142-a33c-111091b9580a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "positive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Positive",
                            NameTrxCode = "feeling_name_positive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4fc6e1f1-a7a4-4328-b6c1-5d5da2199396"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "chill",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Chill",
                            NameTrxCode = "feeling_name_chill",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("06e7366c-f076-43af-a854-fb1edec887c6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hopeful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hopeful",
                            NameTrxCode = "feeling_name_hopeful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("24f921f8-ccb8-440f-9cd6-86fb5d2b688c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "joyful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Joyful",
                            NameTrxCode = "feeling_name_joyful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d963d517-6feb-4d65-9151-3540dcd88ae4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "tired",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Tired",
                            NameTrxCode = "feeling_name_tired",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6138338f-04e0-4489-95e7-e936c84a4ed3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "motivated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Motivated",
                            NameTrxCode = "feeling_name_motivated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("cf587eb6-b55e-4211-9cdf-e583770ce24e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "proud",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Proud",
                            NameTrxCode = "feeling_name_proud",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("33f26559-2605-48bc-b5c7-cebc69781f70"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "alone",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Alone",
                            NameTrxCode = "feeling_name_alone",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("77d47f3a-602c-4cf4-b848-f13a34b68919"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thoughtful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thoughtful",
                            NameTrxCode = "feeling_name_thoughtful",
                            ShortCode = "",
                            UnicodeIcon = "🤔"
                        },
                        new
                        {
                            FeelingId = new Guid("f15df116-8fc3-4e8a-8a77-e1b06d7d5835"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "OK",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ok",
                            NameTrxCode = "feeling_name_OK",
                            ShortCode = "",
                            UnicodeIcon = "👌"
                        },
                        new
                        {
                            FeelingId = new Guid("4cd2d5c4-5a23-4ad9-bd12-cbf7523f07ef"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nostalgic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nostalgic",
                            NameTrxCode = "feeling_name_nostalgic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("98207582-9807-4440-bdb8-b485b83d94cd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "angry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Angry",
                            NameTrxCode = "feeling_name_angry",
                            ShortCode = "",
                            UnicodeIcon = "😠"
                        },
                        new
                        {
                            FeelingId = new Guid("dafc68e6-6aee-4a79-bbdb-a287e06adffe"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sick",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sick",
                            NameTrxCode = "feeling_name_sick",
                            ShortCode = "",
                            UnicodeIcon = "🤢"
                        },
                        new
                        {
                            FeelingId = new Guid("8338e4f0-bfad-4045-9b51-9708c64bde4a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "delighted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Delighted",
                            NameTrxCode = "feeling_name_delighted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("50214994-14e3-4d99-807d-1a0ce25def90"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "drained",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Drained",
                            NameTrxCode = "feeling_name_drained",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e2675ba5-e708-4d08-b798-72a11e2c6f4e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "emotional",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Emotional",
                            NameTrxCode = "feeling_name_emotional",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6fc4abb6-d8b3-4d7d-a483-1d1f2ee5902e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "confident",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Confident",
                            NameTrxCode = "feeling_name_confident",
                            ShortCode = "",
                            UnicodeIcon = "😏"
                        },
                        new
                        {
                            FeelingId = new Guid("a150dbad-3256-4efe-84e4-f1a7fccd5172"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awesome",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awesome",
                            NameTrxCode = "feeling_name_awesome",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("025b896f-36e6-403b-99bd-1981a793ce1a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fresh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fresh",
                            NameTrxCode = "feeling_name_fresh",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e70d8c90-c4cd-4cbf-9ff5-1b3063340006"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "determined",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Determined",
                            NameTrxCode = "feeling_name_determined",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8db3df28-4ba3-4c35-8ed2-af7e582ed02b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "exhausted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Exhausted",
                            NameTrxCode = "feeling_name_exhausted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("71d7f339-172f-467a-b448-d7c4f51cf96f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "glad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Glad",
                            NameTrxCode = "feeling_name_glad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a7d330b7-ef2c-45e0-b55c-39e5f0e0db90"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lucky",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lucky",
                            NameTrxCode = "feeling_name_lucky",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e84cc8af-3b17-470b-b57f-ab5718acdaab"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "heartbroken",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Heartbroken",
                            NameTrxCode = "feeling_name_heartbroken",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c1d5d90f-b25c-4d6e-95eb-5b8edf0ca7e3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "bored",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Bored",
                            NameTrxCode = "feeling_name_bored",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5f21942d-b7fa-4c4e-9a5a-431dabb281a6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sleepy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sleepy",
                            NameTrxCode = "feeling_name_sleepy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("bbf0c243-9aba-446d-892d-e72a63770ae1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "energised",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Energised",
                            NameTrxCode = "feeling_name_energised",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d957dae7-4d0d-49a4-8890-a93d1c19b751"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hungry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hungry",
                            NameTrxCode = "feeling_name_hungry",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("de952aa5-4324-44f9-8cde-5b138ffeeaa4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "professional",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Professional",
                            NameTrxCode = "feeling_name_professional",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6b6337b9-7726-47f9-bdf4-b97bcc6ad273"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pained",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pained",
                            NameTrxCode = "feeling_name_pained",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c2615ffe-a039-45aa-b3c2-36db1c510c25"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "peaceful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Peaceful",
                            NameTrxCode = "feeling_name_peaceful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d43576e2-a92a-43ae-acc3-1ef834ae7a16"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "disappointed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Disappointed",
                            NameTrxCode = "feeling_name_disappointed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("83c33716-c35b-4f7a-bc5b-6dd0feee5193"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "optimistic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Optimistic",
                            NameTrxCode = "feeling_name_optimistic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f452ab95-bac3-49f0-9fb0-a992fc95b524"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cold",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cold",
                            NameTrxCode = "feeling_name_cold",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6af3dc1f-699a-4196-900b-50dd96f4b0b8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cute",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cute",
                            NameTrxCode = "feeling_name_cute",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("26c73775-f06c-4b80-88ff-c3a04864f43b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fabulous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fabulous",
                            NameTrxCode = "feeling_name_fabulous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("638fcab0-df09-4608-8688-00a2c7e3bb72"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "great",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Great",
                            NameTrxCode = "feeling_name_great",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ae1ac7a2-0d9b-4955-a107-09661d078db0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sorry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sorry",
                            NameTrxCode = "feeling_name_sorry",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("78acd054-3e31-4bfd-a639-a902ef5dd511"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "super",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Super",
                            NameTrxCode = "feeling_name_super",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("cf28457c-5943-42bf-ab86-6b356757484e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worried",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worried",
                            NameTrxCode = "feeling_name_worried",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c3695cf3-cac7-428d-bd4a-5d4252ea2043"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "funny",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Funny",
                            NameTrxCode = "feeling_name_funny",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("89e40345-42f3-4941-8ee0-73a34bcaa28a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "bad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Bad",
                            NameTrxCode = "feeling_name_bad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0b77cb28-2921-474b-ac96-4e7762b666d8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "down",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Down",
                            NameTrxCode = "feeling_name_down",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2dad18e1-1865-442b-8924-57559d761d79"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "inspired",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Inspired",
                            NameTrxCode = "feeling_name_inspired",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b84ed4a5-79ed-4991-8497-38eb8f78a572"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "satisfied",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Satisfied",
                            NameTrxCode = "feeling_name_satisfied",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b8410297-3171-4c7e-8d20-b01031d65a25"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pumped",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pumped",
                            NameTrxCode = "feeling_name_pumped",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("32fc6440-7224-4e68-ac84-6d77f40a254d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "calm",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Calm",
                            NameTrxCode = "feeling_name_calm",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d8067f3a-a972-4a3e-8a2d-f3288218d6e7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "confused",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Confused",
                            NameTrxCode = "feeling_name_confused",
                            ShortCode = "",
                            UnicodeIcon = "😕"
                        },
                        new
                        {
                            FeelingId = new Guid("d0faa40b-1745-4c7c-9748-33960cbfdd4d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "goofy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Goofy",
                            NameTrxCode = "feeling_name_goofy",
                            ShortCode = "",
                            UnicodeIcon = "🤪"
                        },
                        new
                        {
                            FeelingId = new Guid("9a64991b-cbbe-45b3-b3d1-35f456639274"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "missing",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Missing",
                            NameTrxCode = "feeling_name_missing",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6d76787a-f98c-4829-9dd3-6fba3c6ce921"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "good",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Good",
                            NameTrxCode = "feeling_name_good",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e0f4670e-9a10-4c8d-93c3-81149f398433"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sarcastic",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sarcastic",
                            NameTrxCode = "feeling_name_sarcastic",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d326d98f-c2f4-4e5d-8033-28ad47285929"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lonely",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lonely",
                            NameTrxCode = "feeling_name_lonely",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("15f47d30-1ef2-4e4f-a7b5-0dea084bc327"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "strong",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Strong",
                            NameTrxCode = "feeling_name_strong",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b596ccc9-2f60-47ca-808d-bd9733452f2c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "concerned",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Concerned",
                            NameTrxCode = "feeling_name_concerned",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6c2328cb-f7d1-40d7-a7a6-6319063f676c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "special",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Special",
                            NameTrxCode = "feeling_name_special",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b58062a0-e189-43da-8dc4-b8c4f6f68629"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "depressed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Depressed",
                            NameTrxCode = "feeling_name_depressed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("00920656-75c4-47d2-9e5f-bccf6e725302"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "jolly",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Jolly",
                            NameTrxCode = "feeling_name_jolly",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d4ba9080-2f00-4325-b4ae-c187a6b1b933"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "curious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Curious",
                            NameTrxCode = "feeling_name_curious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e1f34223-d6ea-4095-9472-b6b1e6bb7804"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "low",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Low",
                            NameTrxCode = "feeling_name_low",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("242b3b0e-a74d-47e6-aea7-26ee0b2c9ced"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "welcome",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Welcome",
                            NameTrxCode = "feeling_name_welcome",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("6e21c9e0-6728-4b24-9b66-3541f7335f1d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "broken",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Broken",
                            NameTrxCode = "feeling_name_broken",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4b92beeb-4ddf-4c78-97e6-7c4ac4cb2984"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "beautiful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Beautiful",
                            NameTrxCode = "feeling_name_beautiful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c36b0530-f263-439e-804d-7f0069acd9e6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amazing",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amazing",
                            NameTrxCode = "feeling_name_amazing",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2a94c539-6e38-41f3-b56a-441403a4a9d5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "irritated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Irritated",
                            NameTrxCode = "feeling_name_irritated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("cb0d8af0-a741-4682-b02d-4f870bf95629"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stressed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stressed",
                            NameTrxCode = "feeling_name_stressed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8903d4a9-e5a0-4f47-a686-0046ddd962dc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "incomplete",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Incomplete",
                            NameTrxCode = "feeling_name_incomplete",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("649a53ce-c5e6-4193-a60e-525e91192739"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hyper",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hyper",
                            NameTrxCode = "feeling_name_hyper",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b49cad67-3641-462b-aedb-3aa4ed71ae4e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mischievous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mischievous",
                            NameTrxCode = "feeling_name_mischievous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ce9fdbf2-e07c-4bfa-a23a-0b5a242000cb"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "amazed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Amazed",
                            NameTrxCode = "feeling_name_amazed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("80dcdca4-b471-4626-8851-d6c28e29930c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "annoyed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Annoyed",
                            NameTrxCode = "feeling_name_annoyed",
                            ShortCode = "",
                            UnicodeIcon = "😒"
                        },
                        new
                        {
                            FeelingId = new Guid("4f6b5397-3740-4128-af6a-5e62748d724e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fed",
                            NameTrxCode = "feeling_name_fed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ab142641-d580-4b15-87a2-47abefa38f81"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "puzzled",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Puzzled",
                            NameTrxCode = "feeling_name_puzzled",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0d8faade-9cf2-4be0-a759-8621eb9adf52"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "furious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Furious",
                            NameTrxCode = "feeling_name_furious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("8fbffae7-3aaf-45eb-b3b6-9b01c33bb318"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "refreshed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Refreshed",
                            NameTrxCode = "feeling_name_refreshed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f7d33dba-016e-4876-8689-a4c21c820cf6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "accomplished",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Accomplished",
                            NameTrxCode = "feeling_name_accomplished",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("410d9919-5cb5-4709-984a-3d9231cdc237"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "surprised",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Surprised",
                            NameTrxCode = "feeling_name_surprised",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("785ef3c7-8bbc-471e-96a9-49ff0e779b41"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "perplexed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Perplexed",
                            NameTrxCode = "feeling_name_perplexed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1c44c94b-e7b0-42d5-903e-c255d0a8b3b1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "frustrated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Frustrated",
                            NameTrxCode = "feeling_name_frustrated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("dca29114-f095-4c92-97a8-68d23afa061a"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "meh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Meh",
                            NameTrxCode = "feeling_name_meh",
                            ShortCode = "",
                            UnicodeIcon = "😐️"
                        },
                        new
                        {
                            FeelingId = new Guid("03b99a59-5b4e-4a0c-b3b1-e7e4e6f2bfde"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "pretty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Pretty",
                            NameTrxCode = "feeling_name_pretty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("041bae3a-19a2-4f69-8c32-5f27cad645bd"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "better",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Better",
                            NameTrxCode = "feeling_name_better",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b9b3e04e-d0da-4bd8-a351-f35aaba39265"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "guilty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Guilty",
                            NameTrxCode = "feeling_name_guilty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("73496e80-f156-4de0-a8e8-e249d9d8cbd9"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "safe",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Safe",
                            NameTrxCode = "feeling_name_safe",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2478013f-126f-4eef-973d-4c4634284f48"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "free",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Free",
                            NameTrxCode = "feeling_name_free",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("79d971a9-0c8e-4743-a28a-35dbdc34cd58"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lost",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lost",
                            NameTrxCode = "feeling_name_lost",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2411d73b-8d26-4087-b911-9289620ea685"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "old",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Old",
                            NameTrxCode = "feeling_name_old",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("272b15b5-11e2-412a-b8a2-fa731f37812b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "lazy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lazy",
                            NameTrxCode = "feeling_name_lazy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("18fb3d5e-af64-4c51-ab70-665a718ab7bc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worse",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worse",
                            NameTrxCode = "feeling_name_worse",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9d72f096-b97c-4ab9-b837-0bdf03573d34"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "horrible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Horrible",
                            NameTrxCode = "feeling_name_horrible",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d0e6e29b-b2f2-454f-b992-8aac095f339d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "comfortable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Comfortable",
                            NameTrxCode = "feeling_name_comfortable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9e8b2976-9a7a-4d3a-845b-b5408586687d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stupid",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stupid",
                            NameTrxCode = "feeling_name_stupid",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("7adfadf8-9ce2-44b7-b963-62f16c1e0408"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ashamed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ashamed",
                            NameTrxCode = "feeling_name_ashamed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("722e8db0-92f3-4bbc-b385-1e50a1c44257"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "terrible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Terrible",
                            NameTrxCode = "feeling_name_terrible",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("38f2073a-a6c5-4f92-aba7-f49241f50167"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "asleep",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Asleep",
                            NameTrxCode = "feeling_name_asleep",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("799bb597-f19e-4a0b-b084-805ded151b69"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "well",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Well",
                            NameTrxCode = "feeling_name_well",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c778c266-8196-403d-9cd8-a0a055925e27"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "alive",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Alive",
                            NameTrxCode = "feeling_name_alive",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("82085ee5-84e7-41fd-a6ea-652ecf1a492d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "shy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Shy",
                            NameTrxCode = "feeling_name_shy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("348e3731-8e98-44d7-a78f-e5fb5ce6a2de"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rough",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rough",
                            NameTrxCode = "feeling_name_rough",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("49945cbc-ed01-4f94-b25a-9b52176c3e27"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "weird",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Weird",
                            NameTrxCode = "feeling_name_weird",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("101e6fef-ba57-4908-97d1-afcfa902527d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "human",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Human",
                            NameTrxCode = "feeling_name_human",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c270a121-271b-491c-8ba0-d0e7d2fdc44d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hurt",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hurt",
                            NameTrxCode = "feeling_name_hurt",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("17c631f1-dd9e-4730-8ff2-87407f5e7945"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awful",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awful",
                            NameTrxCode = "feeling_name_awful",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("25cb7b99-d486-4381-9fef-953896564077"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "normal",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Normal",
                            NameTrxCode = "feeling_name_normal",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("64f1f277-f018-4dc4-b924-0a58f94e2806"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "warm",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Warm",
                            NameTrxCode = "feeling_name_warm",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1d8a431b-2e0f-4a17-84fe-1bcb6a5d8172"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "insecure",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Insecure",
                            NameTrxCode = "feeling_name_insecure",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("aa2f19b2-f208-4dbb-90ab-cfc88f0facdb"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "weak",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Weak",
                            NameTrxCode = "feeling_name_weak",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5e2e2585-25e8-4e35-99e3-37448064391c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "kind",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Kind",
                            NameTrxCode = "feeling_name_kind",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ba036991-f5c0-4b60-992d-61f31529e362"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "fine",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Fine",
                            NameTrxCode = "feeling_name_fine",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ea1860cb-624f-4c85-8d67-072ce999bd0b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dumb",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dumb",
                            NameTrxCode = "feeling_name_dumb",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("5a996595-9d9f-4abe-aba3-3229eba3300d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nice",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nice",
                            NameTrxCode = "feeling_name_nice",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c56a5a31-9829-4b55-b9ca-402232983301"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "important",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Important",
                            NameTrxCode = "feeling_name_important",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("fe3ee77e-faec-46db-b48d-e2ea52f4aba3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "crappy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Crappy",
                            NameTrxCode = "feeling_name_crappy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("0b1a801a-4840-4c63-a9af-e829014c570f"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "uncomfortable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Uncomfortable",
                            NameTrxCode = "feeling_name_uncomfortable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9642268f-eb0c-4eb1-8ba7-9cd6fac98ab5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "worthless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Worthless",
                            NameTrxCode = "feeling_name_worthless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4c9959d3-0c75-46e7-9441-6cc248fcf7d8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ready",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ready",
                            NameTrxCode = "feeling_name_ready",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4ce326f0-0dfd-4332-b2f7-da768dcb1c32"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "different",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Different",
                            NameTrxCode = "feeling_name_different",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("02e3976e-b716-4061-a673-12837b0972b0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "helpless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Helpless",
                            NameTrxCode = "feeling_name_helpless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("001c7ef7-93b9-4f95-86ee-91e0bd91729c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "awkward",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Awkward",
                            NameTrxCode = "feeling_name_awkward",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("3dbd01fa-addb-43da-ad35-e500a4f0c7a8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "drunk",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Drunk",
                            NameTrxCode = "feeling_name_drunk",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("28fa5e0a-0a0d-48fb-8b76-92ace6355298"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "overwhelmed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Overwhelmed",
                            NameTrxCode = "feeling_name_overwhelmed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d91bbc2c-efce-46e2-8f0f-5259561b0666"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hopeless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hopeless",
                            NameTrxCode = "feeling_name_hopeless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e6b9ee80-47ad-45ec-b55c-da7b6ea9349e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "whole",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Whole",
                            NameTrxCode = "feeling_name_whole",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d35a6793-c9f8-4b45-8c1e-8c105ce44f2c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "miserable",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Miserable",
                            NameTrxCode = "feeling_name_miserable",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f95208f1-a86c-434f-b365-f15f06aa3bdb"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mad",
                            NameTrxCode = "feeling_name_mad",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("dd5ee5de-ba45-4abc-823d-9cb4a34298bf"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "deep",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Deep",
                            NameTrxCode = "feeling_name_deep",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("46ac8b0a-41c5-42f3-9b04-94a6d6a32459"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "yucky",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Yucky",
                            NameTrxCode = "feeling_name_yucky",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("785dbdcd-cb46-43f8-87e2-e47603af6215"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nervous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nervous",
                            NameTrxCode = "feeling_name_nervous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4cfbbbaf-c355-4ab6-af0e-4c60208f7622"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blue",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blue",
                            NameTrxCode = "feeling_name_blue",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("077bd2b6-4cac-45a7-9be7-9ff5f5e64540"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wanted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wanted",
                            NameTrxCode = "feeling_name_wanted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("91e802cd-8ec9-45f9-9fbc-9723e2fb2200"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "honoured",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Honoured",
                            NameTrxCode = "feeling_name_honoured",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("55e58988-f8f7-463d-a3ef-0d4453bce500"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "light",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Light",
                            NameTrxCode = "feeling_name_light",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("81769f46-9660-4e29-8cd9-9221a043e650"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "hung-over",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hung-Over",
                            NameTrxCode = "feeling_name_hung-over",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("05680a71-2c12-4bbd-80e9-8ebec52261a3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "secure",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Secure",
                            NameTrxCode = "feeling_name_secure",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("61322d77-de72-423e-a57e-0f08e074e137"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "naked",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Naked",
                            NameTrxCode = "feeling_name_naked",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("24cf30f7-9b41-4930-8c38-296425f9f600"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dirty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dirty",
                            NameTrxCode = "feeling_name_dirty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("821e4855-de1e-434b-9389-391d49706382"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unimportant",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unimportant",
                            NameTrxCode = "feeling_name_unimportant",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d23c3e37-5b81-43c6-9cd8-89e6646be47c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "mighty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mighty",
                            NameTrxCode = "feeling_name_mighty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a1c408c0-386a-4eb1-8b38-37ea64b4d09b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "scared",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Scared",
                            NameTrxCode = "feeling_name_scared",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("32f75627-0947-4f2a-a503-3ab2c39c42a1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "jealous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Jealous",
                            NameTrxCode = "feeling_name_jealous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("b70ec8e2-7964-4b7e-acbc-32e591f01223"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sore",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sore",
                            NameTrxCode = "feeling_name_sore",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("dea3dc90-026a-43ae-95bf-f68b5c6b2128"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unwanted",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unwanted",
                            NameTrxCode = "feeling_name_unwanted",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ea2e1247-678e-4fd6-a689-ee16e990d58c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "appreciated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Appreciated",
                            NameTrxCode = "feeling_name_appreciated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a74bd636-b055-4c4a-980d-f8fbaab074e2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "full",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Full",
                            NameTrxCode = "feeling_name_full",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("640b1ae8-d5a9-4633-9b2e-2169acc7111b"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "busy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Busy",
                            NameTrxCode = "feeling_name_busy",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("929d44c9-2d85-448b-8c97-e4db0e8e8538"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "small",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Small",
                            NameTrxCode = "feeling_name_small",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("31ff8009-8399-4b31-a371-32e97e20d881"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "unloved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Unloved",
                            NameTrxCode = "feeling_name_unloved",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("cb4c4838-2f62-4456-8b6b-0772d5513802"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "useless",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Useless",
                            NameTrxCode = "feeling_name_useless",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("558ffc7e-e7f2-46dc-bcaf-13a87ce4289c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "qualified",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Qualified",
                            NameTrxCode = "feeling_name_qualified",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ce76d28e-0801-4eae-ab9b-3df5bb2764e7"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "blah",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Blah",
                            NameTrxCode = "feeling_name_blah",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("edbd7af2-6ad2-4b9d-85d3-0d2f2e28f0bb"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "impatient",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Impatient",
                            NameTrxCode = "feeling_name_impatient",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("eea0041f-eede-4f00-9823-03d7ecedd9e8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "privileged",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Privileged",
                            NameTrxCode = "feeling_name_privileged",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1e75f2db-ac47-4c70-8c61-83e41ce992f5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "trapped",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Trapped",
                            NameTrxCode = "feeling_name_trapped",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e006c4df-b0f6-42d3-a1cd-948fadaa4f64"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "thirsty",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Thirsty",
                            NameTrxCode = "feeling_name_thirsty",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("72643d2e-8e36-4a23-ac2b-74770deb5ec3"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "nauseous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nauseous",
                            NameTrxCode = "feeling_name_nauseous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f017cea2-fffa-49a7-ad03-0d140c341dec"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "upset",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Upset",
                            NameTrxCode = "feeling_name_upset",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("406d9262-73fb-451b-9a56-a7778e25cef5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "offended",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Offended",
                            NameTrxCode = "feeling_name_offended",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a33aeb75-9386-402e-9443-05d056d81ad5"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "numb",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Numb",
                            NameTrxCode = "feeling_name_numb",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("4a12ec1e-3e8e-4ad2-b0d9-19fb367c27f8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "perfect",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Perfect",
                            NameTrxCode = "feeling_name_perfect",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("1cbff7c3-7187-498c-ae92-59851e928be0"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "challenged",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Challenged",
                            NameTrxCode = "feeling_name_challenged",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("78bfbd95-2a58-4d6a-a58e-b41fc3ba2e31"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "threatened",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Threatened",
                            NameTrxCode = "feeling_name_threatened",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("91271051-cf89-4408-b345-34ae9cac9082"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "relieved",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Relieved",
                            NameTrxCode = "feeling_name_relieved",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("2f785118-a941-4b31-b18c-0aa6ff67a7c6"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "stuck",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Stuck",
                            NameTrxCode = "feeling_name_stuck",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("e74ba5d1-9799-4d76-a89c-bb06b77d7028"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "strange",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Strange",
                            NameTrxCode = "feeling_name_strange",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c522fb78-4af5-4564-bb3a-78d993c921aa"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "embarrassed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Embarrassed",
                            NameTrxCode = "feeling_name_embarrassed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("819b26e4-bff3-4201-89c2-91d54a943c47"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rested",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rested",
                            NameTrxCode = "feeling_name_rested",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("9139c16b-33ab-457c-ac0a-9dbd123daf88"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "smart",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Smart",
                            NameTrxCode = "feeling_name_smart",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("bbd30002-b963-4d3b-a965-b31120c6a554"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "cheated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Cheated",
                            NameTrxCode = "feeling_name_cheated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("c7502c70-343f-4874-a2bc-745eaba9e147"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "betrayed",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Betrayed",
                            NameTrxCode = "feeling_name_betrayed",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("d2a19885-62da-49d9-970d-a9563832be0c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "anxious",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Anxious",
                            NameTrxCode = "feeling_name_anxious",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("86a0028d-e917-4946-9111-bbee28d7f3f8"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "aggravated",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Aggravated",
                            NameTrxCode = "feeling_name_aggravated",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("a6aadaaa-2805-4c6b-aa10-5db5696e043d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "evil",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Evil",
                            NameTrxCode = "feeling_name_evil",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("73580320-fc33-49ea-87ad-b1bc59a404ec"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "ignored",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ignored",
                            NameTrxCode = "feeling_name_ignored",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("ab94b0d5-67cf-4f7d-8a50-c76cb31f89ee"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "regret",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Regret",
                            NameTrxCode = "feeling_name_regret",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("27f00a51-7db1-4e88-8622-e3a7398c8a67"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "healthy",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Healthy",
                            NameTrxCode = "feeling_name_healthy",
                            ShortCode = "",
                            UnicodeIcon = "😊"
                        },
                        new
                        {
                            FeelingId = new Guid("02e7ce16-4111-4207-8c5a-e6c30a3bd9fc"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "generous",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Generous",
                            NameTrxCode = "feeling_name_generous",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("463d0ba5-bd9b-41ff-b13b-283fcf596021"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "rich",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Rich",
                            NameTrxCode = "feeling_name_rich",
                            ShortCode = "",
                            UnicodeIcon = "🤑"
                        },
                        new
                        {
                            FeelingId = new Guid("f1362973-da86-4f9c-8fb6-fd847e78e596"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "afraid",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Afraid",
                            NameTrxCode = "feeling_name_afraid",
                            ShortCode = "",
                            UnicodeIcon = "😨"
                        },
                        new
                        {
                            FeelingId = new Guid("5dabe3aa-795e-43e3-ad3a-6bec493bdd8d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "broke",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Broke",
                            NameTrxCode = "feeling_name_broke",
                            ShortCode = "",
                            UnicodeIcon = ""
                        },
                        new
                        {
                            FeelingId = new Guid("f629558d-fb58-4805-a469-4dd801e208d2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "invisible",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(5520), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Invisible",
                            NameTrxCode = "feeling_name_invisible",
                            ShortCode = "",
                            UnicodeIcon = "🫥"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<int>("Direction")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("ThreeLetterCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(5);

                    b.Property<string>("TwoLetterCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.HasIndex("ThreeLetterCode")
                        .IsUnique();

                    b.HasIndex("TwoLetterCode")
                        .IsUnique();

                    b.ToTable("Languages", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4c0886a-a162-4b10-8b7c-565c2dbcde52"),
                            Code = "EN",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "English",
                            NameTrxCode = "language_name_en",
                            ThreeLetterCode = "ENG",
                            TwoLetterCode = "EN"
                        },
                        new
                        {
                            Id = new Guid("b4a25086-4ad6-4e72-bcf5-d9096044bb1a"),
                            Code = "AF",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Afrikaans",
                            NameTrxCode = "language_name_af",
                            ThreeLetterCode = "AFR",
                            TwoLetterCode = "AF"
                        },
                        new
                        {
                            Id = new Guid("cfe75c68-5b3b-4ea2-98de-b43c1071a0e8"),
                            Code = "FR",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "French",
                            NameTrxCode = "language_name_fr",
                            ThreeLetterCode = "FRA",
                            TwoLetterCode = "FR"
                        },
                        new
                        {
                            Id = new Guid("70c67984-1483-4082-8b8e-9950a024caf8"),
                            Code = "ZH",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Chinese",
                            NameTrxCode = "language_name_zh",
                            ThreeLetterCode = "ZHO",
                            TwoLetterCode = "ZH"
                        },
                        new
                        {
                            Id = new Guid("8eaa2e0e-a1ec-4aea-9905-d9e0883c7623"),
                            Code = "HE",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 1,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hebrew",
                            NameTrxCode = "language_name_he",
                            ThreeLetterCode = "HEB",
                            TwoLetterCode = "HE"
                        },
                        new
                        {
                            Id = new Guid("078433dc-b264-4650-aa01-a1226475aa12"),
                            Code = "HI",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Hindi",
                            NameTrxCode = "language_name_hi",
                            ThreeLetterCode = "HIN",
                            TwoLetterCode = "HI"
                        },
                        new
                        {
                            Id = new Guid("eb99f2dd-d232-4ffa-9b55-c8668e5b535b"),
                            Code = "RU",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Russian",
                            NameTrxCode = "language_name_ru",
                            ThreeLetterCode = "RUS",
                            TwoLetterCode = "RU"
                        },
                        new
                        {
                            Id = new Guid("b247ba7f-c5c2-4aed-aec8-b2f3bf78bf05"),
                            Code = "ES",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Spanish",
                            NameTrxCode = "language_name_es",
                            ThreeLetterCode = "ESP",
                            TwoLetterCode = "ES"
                        },
                        new
                        {
                            Id = new Guid("70f3758c-b6d1-4097-a36f-e0909baf5417"),
                            Code = "ZU",
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Direction = 0,
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(2091), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Zulu",
                            NameTrxCode = "language_name_zu",
                            ThreeLetterCode = "ZUL",
                            TwoLetterCode = "ZU"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.PhoneNumberType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("PhoneNumberTypes", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("NameTrxCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("UnicodeIcon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("NameTrxCode")
                        .IsUnique();

                    b.ToTable("Reactions", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c6f1ae99-8efc-4de9-9a4c-9ab82127333d"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "like",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Like",
                            NameTrxCode = "reaction_name_like",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("312c32eb-5d67-4138-b6a9-3ffd3a510670"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "dislike",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Dislike",
                            NameTrxCode = "reaction_name_dislike",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("9cad21bb-67b1-41e9-8b95-fa356fbde2a4"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "love",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Love",
                            NameTrxCode = "reaction_name_love",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("eeacd12c-33a5-4eff-8572-5c8b5aa18f4c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "care",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Care",
                            NameTrxCode = "reaction_name_care",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("9b138831-bad9-4b3c-b1e4-8ae78bd30402"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "wow",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Wow",
                            NameTrxCode = "reaction_name_wow",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("1a38e09a-7ff6-4a09-a896-6638eab2361c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "laugh",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Haha",
                            NameTrxCode = "reaction_name_laugh",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("c071029d-40c2-46ee-962d-9d5bfc7f4260"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "angry",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Angry",
                            NameTrxCode = "reaction_name_angry",
                            UnicodeIcon = "1"
                        },
                        new
                        {
                            Id = new Guid("34087387-7d4c-428c-b11c-16a4bd2a12df"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            IconName = "sad",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 684, DateTimeKind.Unspecified).AddTicks(4601), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sad",
                            NameTrxCode = "reaction_name_sad",
                            UnicodeIcon = "1"
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<int>("DataType")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(5);

                    b.Property<string>("HelpText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("SettingCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("SettingCategoryId");

                    b.ToTable("Settings", "config");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66821ae9-7449-4d0d-9067-5588f9fe1f30"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "AU",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Regional Format",
                            ShortDescription = "Formats for dates, times and numbers."
                        },
                        new
                        {
                            Id = new Guid("5c160f85-2e25-4dfa-ba9e-c886648ed1e2"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "EN",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Language Code",
                            ShortDescription = "The language code of the Astrana instance user."
                        },
                        new
                        {
                            Id = new Guid("b4634ed1-4f58-4312-adb4-7ed54a678faa"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "AUS Eastern Standard Time",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Time Zone",
                            ShortDescription = "The time zone of the Astrana instance user."
                        },
                        new
                        {
                            Id = new Guid("712a9da0-4daf-47a1-8fe5-e5668a4870a1"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "localhost",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Host Name",
                            ShortDescription = "The address of the Astrana instance."
                        },
                        new
                        {
                            Id = new Guid("3f2b9963-05a6-418f-926b-5e0735da0474"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Host Port Number",
                            ShortDescription = "The host port number of the Astrana instance."
                        },
                        new
                        {
                            Id = new Guid("c83ab309-8dce-402b-803b-7410dd06572c"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 4,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Idp Issuer Signing Key Secret",
                            ShortDescription = "The secret used for generating the Idp Issuer Signing Key for the Astrana instance.",
                            Value = "69473DFCE4E2D15A343495F3612FBD2C69473DFCE4E2D15A343495F3612FBD2C"
                        },
                        new
                        {
                            Id = new Guid("92b8fb5f-36d8-430d-aa2d-e0b3a6afbd9e"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 21,
                            DefaultValue = "",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Default Skin Tone",
                            ShortDescription = "The secret used for generating the Idp Issuer Signing Key for the Astrana instance.",
                            Value = "69473DFCE4E2D15A343495F3612FBD2C69473DFCE4E2D15A343495F3612FBD2C"
                        },
                        new
                        {
                            Id = new Guid("97606c9c-00c0-4756-8e98-d45dc0bd70ad"),
                            CreatedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            DataType = 1,
                            DefaultValue = "0",
                            LastModifiedBy = new Guid("0334ca45-b161-432c-ad23-ed7b7f0a74ab"),
                            LastModifiedTimestamp = new DateTimeOffset(new DateTime(2023, 10, 12, 3, 12, 58, 683, DateTimeKind.Unspecified).AddTicks(9203), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Multi-factor Authentication",
                            ShortDescription = "Turn multi-factor authentication on/off."
                        });
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("SettingCategories", "config");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.ToTable("EmailAddresses", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("InstantMessengerUsernames", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("Id");

                    b.ToTable("PhoneNumbers", "contact");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Audio", b =>
                {
                    b.Property<Guid>("AudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("AudioId");

                    b.ToTable("Audios", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Comment", b =>
                {
                    b.Property<Guid>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("TargeCommentCommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TargetAudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("TargetCommentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("TargetContentCollectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("TargetGifId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("TargetImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("TargetLinkId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<long?>("TargetPostId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("TargetVideoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("CommentId");

                    b.HasIndex("TargeCommentCommentId");

                    b.HasIndex("TargetAudioId");

                    b.HasIndex("TargetContentCollectionId");

                    b.HasIndex("TargetGifId");

                    b.HasIndex("TargetImageId");

                    b.HasIndex("TargetLinkId");

                    b.HasIndex("TargetPostId");

                    b.HasIndex("TargetVideoId");

                    b.ToTable("Comments", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollection", b =>
                {
                    b.Property<Guid>("ContentCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<int>("CollectionType")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(1);

                    b.HasKey("ContentCollectionId");

                    b.ToTable("ContentCollections", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollectionItem", b =>
                {
                    b.Property<Guid>("ContentCollectionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.Property<Guid>("ContentCollectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("GifId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("LinkId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<int>("MediaType")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.HasKey("ContentCollectionItemId");

                    b.HasIndex("AudioId");

                    b.HasIndex("ContentCollectionId");

                    b.HasIndex("GifId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LinkId");

                    b.HasIndex("VideoId");

                    b.ToTable("ContentCollectionItems", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentSafetyRating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("ContentSafetyRatings", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ExternalContentSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CharSet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("PreviewImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<string>("Robots")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("PreviewImageId");

                    b.ToTable("ExternalContentSubscriptions", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)")
                        .HasColumnOrder(1);

                    b.HasKey("ImageId");

                    b.ToTable("Images", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Link", b =>
                {
                    b.Property<Guid>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("CharSet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("PreviewImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<string>("Robots")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(1);

                    b.HasKey("LinkId");

                    b.HasIndex("PreviewImageId");

                    b.ToTable("Links", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Location", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("LocationId");

                    b.ToTable("Locations", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Post", b =>
                {
                    b.Property<long>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PostId"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Text")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnOrder(1);

                    b.HasKey("PostId");

                    b.ToTable("Posts", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.PostAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.Property<string>("Caption")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("ContentCollectionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(9);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid?>("FeelingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(11);

                    b.Property<Guid?>("GifId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid?>("LinkId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(10);

                    b.Property<long?>("PostId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(1);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("AudioId");

                    b.HasIndex("ContentCollectionId");

                    b.HasIndex("FeelingId");

                    b.HasIndex("GifId");

                    b.HasIndex("ImageId");

                    b.HasIndex("LinkId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PostId");

                    b.HasIndex("VideoId");

                    b.ToTable("PostAttachments", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.ToTable("Tags", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Video", b =>
                {
                    b.Property<Guid>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Caption")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(2);

                    b.Property<string>("Copyright")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("VideoId");

                    b.ToTable("Videos", "content");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(10);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(20);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnOrder(4);

                    b.Property<short>("FailedAccessCount")
                        .HasColumnType("smallint")
                        .HasColumnOrder(17);

                    b.Property<bool>("IsEmailAddressConfirmed")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsLockoutEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(16);

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("bit")
                        .HasColumnOrder(13);

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(14);

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(19);

                    b.Property<DateTimeOffset>("LastLoginTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(21);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(15);

                    b.Property<string>("NormalizedEmailAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(8);

                    b.Property<string>("PhoneCountryCodeISO")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(11);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(12);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(9);

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(18);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("UserAccounts", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccountRoleRel", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("UserRoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "UserRoleId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserAccountRoleRel", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles", "iam");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.Peer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid?>("AudienceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AudienceId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsMuted")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.HasIndex("AudienceId1");

                    b.ToTable("Peers", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.PeerConnectionRequestReceived", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerPreviewAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("PeerConnectionRequestsReceived", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.PeerConnectionRequestSubmitted", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid?>("DeactivatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99995);

                    b.Property<string>("DeactivatedReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(99994);

                    b.Property<DateTimeOffset?>("DeactivatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99993);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(4);

                    b.Property<string>("PeerPreviewAccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnOrder(5);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("PeerConnectionRequestsSubmitted", "dbo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserEmailAddressRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("EmailAddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "EmailAddressId");

                    b.HasIndex("EmailAddressId");

                    b.ToTable("UserEmailAddressRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserMessengerUsernameRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("MessengerUsernameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "MessengerUsernameId");

                    b.HasIndex("MessengerUsernameId");

                    b.ToTable("MessengerUsernameRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserPhoneNumberRelationship", b =>
                {
                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PhoneNumberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.HasKey("UserAccountId", "PhoneNumberId");

                    b.HasIndex("PhoneNumberId");

                    b.ToTable("UserPhoneNumberRel", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("CoverPictureImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoverPicturesCollectionContentCollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(6);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<string>("Introduction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.Property<string>("MiddleNames")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("ProfilePictureImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfilePicturesCollectionContentCollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("CoverPictureImageId");

                    b.HasIndex("CoverPicturesCollectionContentCollectionId");

                    b.HasIndex("ProfilePictureImageId");

                    b.HasIndex("ProfilePicturesCollectionContentCollectionId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserProfiles", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99996);

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99998);

                    b.Property<short?>("DisplayOrder")
                        .HasColumnType("smallint")
                        .HasColumnOrder(7);

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(6);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(3);

                    b.Property<string>("Label")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(99997);

                    b.Property<DateTimeOffset>("LastModifiedTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(99999);

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileDetails", "user");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.User.UserProfileDetail", null)
                        .WithMany("Audiences")
                        .HasForeignKey("UserProfileDetailId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Country", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("Countries")
                        .HasForeignKey("AudienceId");

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Language", null)
                        .WithMany("Countries")
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSetting", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", "SettingCategory")
                        .WithMany("Settings")
                        .HasForeignKey("SettingCategoryId");

                    b.Navigation("SettingCategory");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Comment", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Comment", "TargeComment")
                        .WithMany()
                        .HasForeignKey("TargeCommentCommentId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "TargetAudio")
                        .WithMany()
                        .HasForeignKey("TargetAudioId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "TargetContentCollection")
                        .WithMany()
                        .HasForeignKey("TargetContentCollectionId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "TargetGif")
                        .WithMany()
                        .HasForeignKey("TargetGifId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "TargetImage")
                        .WithMany()
                        .HasForeignKey("TargetImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "TargetLink")
                        .WithMany()
                        .HasForeignKey("TargetLinkId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Post", "TargetPost")
                        .WithMany()
                        .HasForeignKey("TargetPostId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Video", "TargetVideo")
                        .WithMany()
                        .HasForeignKey("TargetVideoId");

                    b.Navigation("TargeComment");

                    b.Navigation("TargetAudio");

                    b.Navigation("TargetContentCollection");

                    b.Navigation("TargetGif");

                    b.Navigation("TargetImage");

                    b.Navigation("TargetLink");

                    b.Navigation("TargetPost");

                    b.Navigation("TargetVideo");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollectionItem", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "ContentCollection")
                        .WithMany("ContentCollectionItems")
                        .HasForeignKey("ContentCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Gif")
                        .WithMany()
                        .HasForeignKey("GifId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Audio");

                    b.Navigation("ContentCollection");

                    b.Navigation("Gif");

                    b.Navigation("Image");

                    b.Navigation("Link");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ExternalContentSubscription", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "PreviewImage")
                        .WithMany()
                        .HasForeignKey("PreviewImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviewImage");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Link", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "PreviewImage")
                        .WithMany()
                        .HasForeignKey("PreviewImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviewImage");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.PostAttachment", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Audio", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "ContentCollection")
                        .WithMany()
                        .HasForeignKey("ContentCollectionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Feeling", "Feeling")
                        .WithMany()
                        .HasForeignKey("FeelingId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Gif")
                        .WithMany()
                        .HasForeignKey("GifId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Link", "Link")
                        .WithMany()
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Astrana.Core.Data.Entities.Content.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Post", null)
                        .WithMany("Attachments")
                        .HasForeignKey("PostId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Audio");

                    b.Navigation("ContentCollection");

                    b.Navigation("Feeling");

                    b.Navigation("Gif");

                    b.Navigation("Image");

                    b.Navigation("Link");

                    b.Navigation("Location");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Tag", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("Tags")
                        .HasForeignKey("AudienceId");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccountRoleRel", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserRole", "UserRole")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Peers.Peer", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("PeersExcluded")
                        .HasForeignKey("AudienceId");

                    b.HasOne("Astrana.Core.Data.Entities.Configuration.Audience", null)
                        .WithMany("PeersIncluded")
                        .HasForeignKey("AudienceId1");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserEmailAddressRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", "EmailAddress")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("EmailAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailAddress");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserMessengerUsernameRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", "MessengerUsername")
                        .WithMany("MessengerUsernames")
                        .HasForeignKey("MessengerUsernameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("MessengerUsernames")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessengerUsername");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserPhoneNumberRelationship", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", "PhoneNumber")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneNumber");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfile", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "CoverPicture")
                        .WithMany()
                        .HasForeignKey("CoverPictureImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "CoverPicturesCollection")
                        .WithMany()
                        .HasForeignKey("CoverPicturesCollectionContentCollectionId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.Image", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureImageId");

                    b.HasOne("Astrana.Core.Data.Entities.Content.ContentCollection", "ProfilePicturesCollection")
                        .WithMany()
                        .HasForeignKey("ProfilePicturesCollectionContentCollectionId");

                    b.HasOne("Astrana.Core.Data.Entities.Identity.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoverPicture");

                    b.Navigation("CoverPicturesCollection");

                    b.Navigation("ProfilePicture");

                    b.Navigation("ProfilePicturesCollection");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.HasOne("Astrana.Core.Data.Entities.User.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Audience", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("PeersExcluded");

                    b.Navigation("PeersIncluded");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.Language", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Configuration.SystemSettingCategory", b =>
                {
                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.EmailAddress", b =>
                {
                    b.Navigation("EmailAddresses");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.MessengerUsername", b =>
                {
                    b.Navigation("MessengerUsernames");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.ContactInformation.PhoneNumber", b =>
                {
                    b.Navigation("PhoneNumbers");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.ContentCollection", b =>
                {
                    b.Navigation("ContentCollectionItems");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Content.Post", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserAccount", b =>
                {
                    b.Navigation("EmailAddresses");

                    b.Navigation("MessengerUsernames");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("UserAccountRoles");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.Identity.UserRole", b =>
                {
                    b.Navigation("UserAccountRoles");
                });

            modelBuilder.Entity("Astrana.Core.Data.Entities.User.UserProfileDetail", b =>
                {
                    b.Navigation("Audiences");
                });
#pragma warning restore 612, 618
        }
    }
}
